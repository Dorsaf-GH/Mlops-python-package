window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"bikes": {"fullname": "bikes", "modulename": "bikes", "kind": "module", "doc": "<p>Predict the number of bikes available.</p>\n"}, "bikes.configs": {"fullname": "bikes.configs", "modulename": "bikes.configs", "kind": "module", "doc": "<p>Parse, merge, and convert YAML configs.</p>\n"}, "bikes.configs.parse_file": {"fullname": "bikes.configs.parse_file", "modulename": "bikes.configs", "qualname": "parse_file", "kind": "function", "doc": "<p>Parse a config file from a path.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>path (str):</strong>  local or remote path.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Config: representation of the config file.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">omegaconf</span><span class=\"o\">.</span><span class=\"n\">listconfig</span><span class=\"o\">.</span><span class=\"n\">ListConfig</span> <span class=\"o\">|</span> <span class=\"n\">omegaconf</span><span class=\"o\">.</span><span class=\"n\">dictconfig</span><span class=\"o\">.</span><span class=\"n\">DictConfig</span>:</span></span>", "funcdef": "def"}, "bikes.configs.parse_string": {"fullname": "bikes.configs.parse_string", "modulename": "bikes.configs", "qualname": "parse_string", "kind": "function", "doc": "<p>Parse the given config string.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>string (str):</strong>  configuration string.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Config: representation of the config string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">string</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">omegaconf</span><span class=\"o\">.</span><span class=\"n\">listconfig</span><span class=\"o\">.</span><span class=\"n\">ListConfig</span> <span class=\"o\">|</span> <span class=\"n\">omegaconf</span><span class=\"o\">.</span><span class=\"n\">dictconfig</span><span class=\"o\">.</span><span class=\"n\">DictConfig</span>:</span></span>", "funcdef": "def"}, "bikes.configs.merge_configs": {"fullname": "bikes.configs.merge_configs", "modulename": "bikes.configs", "qualname": "merge_configs", "kind": "function", "doc": "<p>Merge a list of config objects into one.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>configs (list[Config]):</strong>  list of config objects.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Config: representation of the merged config objects.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">configs</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">omegaconf</span><span class=\"o\">.</span><span class=\"n\">listconfig</span><span class=\"o\">.</span><span class=\"n\">ListConfig</span> <span class=\"o\">|</span> <span class=\"n\">omegaconf</span><span class=\"o\">.</span><span class=\"n\">dictconfig</span><span class=\"o\">.</span><span class=\"n\">DictConfig</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">omegaconf</span><span class=\"o\">.</span><span class=\"n\">listconfig</span><span class=\"o\">.</span><span class=\"n\">ListConfig</span> <span class=\"o\">|</span> <span class=\"n\">omegaconf</span><span class=\"o\">.</span><span class=\"n\">dictconfig</span><span class=\"o\">.</span><span class=\"n\">DictConfig</span>:</span></span>", "funcdef": "def"}, "bikes.configs.to_object": {"fullname": "bikes.configs.to_object", "modulename": "bikes.configs", "qualname": "to_object", "kind": "function", "doc": "<p>Convert a config object to a python object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>config (Config):</strong>  representation of the config.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>object: conversion of the config to a python object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">omegaconf</span><span class=\"o\">.</span><span class=\"n\">listconfig</span><span class=\"o\">.</span><span class=\"n\">ListConfig</span> <span class=\"o\">|</span> <span class=\"n\">omegaconf</span><span class=\"o\">.</span><span class=\"n\">dictconfig</span><span class=\"o\">.</span><span class=\"n\">DictConfig</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">object</span>:</span></span>", "funcdef": "def"}, "bikes.datasets": {"fullname": "bikes.datasets", "modulename": "bikes.datasets", "kind": "module", "doc": "<p>Read/Write datasets from/to external sources/destinations.</p>\n"}, "bikes.datasets.Reader": {"fullname": "bikes.datasets.Reader", "modulename": "bikes.datasets", "qualname": "Reader", "kind": "class", "doc": "<p>Base class for a dataset reader.</p>\n\n<p>Use a reader to load a dataset in memory.\ne.g., to read file, database, cloud storage, ...</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>limit (int, optional):</strong>  maximum number of rows to read from dataset.</li>\n</ul>\n", "bases": "abc.ABC, pydantic.main.BaseModel"}, "bikes.datasets.Reader.read": {"fullname": "bikes.datasets.Reader.read", "modulename": "bikes.datasets", "qualname": "Reader.read", "kind": "function", "doc": "<p>Read a dataframe from a dataset.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pd.DataFrame: dataframe representation.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "bikes.datasets.ParquetReader": {"fullname": "bikes.datasets.ParquetReader", "modulename": "bikes.datasets", "qualname": "ParquetReader", "kind": "class", "doc": "<p>Read a dataframe from a parquet file.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>path (str):</strong>  local or remote path to a dataset.</li>\n</ul>\n", "bases": "Reader"}, "bikes.datasets.ParquetReader.read": {"fullname": "bikes.datasets.ParquetReader.read", "modulename": "bikes.datasets", "qualname": "ParquetReader.read", "kind": "function", "doc": "<p>Read a dataframe from a dataset.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pd.DataFrame: dataframe representation.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "bikes.datasets.Writer": {"fullname": "bikes.datasets.Writer", "modulename": "bikes.datasets", "qualname": "Writer", "kind": "class", "doc": "<p>Base class for a dataset writer.</p>\n\n<p>Use a writer to save a dataset from memory.\ne.g., to write file, database, cloud storage, ...</p>\n", "bases": "abc.ABC, pydantic.main.BaseModel"}, "bikes.datasets.Writer.write": {"fullname": "bikes.datasets.Writer.write", "modulename": "bikes.datasets", "qualname": "Writer.write", "kind": "function", "doc": "<p>Write a dataframe to a dataset.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (pd.DataFrame):</strong>  dataframe representation.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "bikes.datasets.ParquetWriter": {"fullname": "bikes.datasets.ParquetWriter", "modulename": "bikes.datasets", "qualname": "ParquetWriter", "kind": "class", "doc": "<p>Writer a dataframe to a parquet file.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>path (str):</strong>  local or remote file to a dataset.</li>\n</ul>\n", "bases": "Writer"}, "bikes.datasets.ParquetWriter.write": {"fullname": "bikes.datasets.ParquetWriter.write", "modulename": "bikes.datasets", "qualname": "ParquetWriter.write", "kind": "function", "doc": "<p>Write a dataframe to a dataset.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (pd.DataFrame):</strong>  dataframe representation.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "bikes.jobs": {"fullname": "bikes.jobs", "modulename": "bikes.jobs", "kind": "module", "doc": "<p>High-level jobs for the project.</p>\n"}, "bikes.jobs.Job": {"fullname": "bikes.jobs.Job", "modulename": "bikes.jobs", "qualname": "Job", "kind": "class", "doc": "<p>Base class for a job.</p>\n\n<p>use a job to execute runs in  context.\ne.g., to define common services like logger</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>logger_service (services.LoggerService):</strong>  manage the logging system.</li>\n<li><strong>mlflow_service (services.MLflowService):</strong>  manage the mlflow system.</li>\n</ul>\n", "bases": "abc.ABC, pydantic.main.BaseModel"}, "bikes.jobs.Job.run": {"fullname": "bikes.jobs.Job.run", "modulename": "bikes.jobs", "qualname": "Job.run", "kind": "function", "doc": "<p>Run the job in context.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Locals: local job variables.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "bikes.jobs.TuningJob": {"fullname": "bikes.jobs.TuningJob", "modulename": "bikes.jobs", "qualname": "TuningJob", "kind": "class", "doc": "<p>Find the best hyperparameters for a model.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>run_name (str):</strong>  name of the MLflow experiment run.</li>\n<li><strong>inputs (datasets.ReaderKind):</strong>  dataset reader with inputs variables.</li>\n<li><strong>targets (datasets.ReaderKind):</strong>  dataset reader with targets variables.</li>\n<li><strong>results (datasets.WriterKind):</strong>  dataset writer for searcher results.</li>\n<li><strong>model (models.ModelKind):</strong>  machine learning model to tune.</li>\n<li><strong>metric (metrics.MetricKind):</strong>  main metric for evaluation.</li>\n<li><strong>splitter (splitters.SplitterKind):</strong>  splitter for datasets.</li>\n<li><strong>searcher (searchers.SearcherKind):</strong>  searcher algorithm.</li>\n</ul>\n", "bases": "Job"}, "bikes.jobs.TuningJob.run": {"fullname": "bikes.jobs.TuningJob.run", "modulename": "bikes.jobs", "qualname": "TuningJob.run", "kind": "function", "doc": "<p>Run the job in context.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Locals: local job variables.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "bikes.jobs.TrainingJob": {"fullname": "bikes.jobs.TrainingJob", "modulename": "bikes.jobs", "qualname": "TrainingJob", "kind": "class", "doc": "<p>Train and register a single AI/ML model.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>run_name (str):</strong>  name of the MLflow experiment run.</li>\n<li><strong>inputs (datasets.ReaderKind):</strong>  dataset reader with inputs variables.</li>\n<li><strong>targets (datasets.ReaderKind):</strong>  dataset reader with targets variables.</li>\n<li><strong>saver (registers.SaverKind):</strong>  save the trained model in registry.</li>\n<li><strong>model (models.ModelKind):</strong>  machine learning model to tune.</li>\n<li><strong>signer (registers.SignerKind):</strong>  signer for the trained model.</li>\n<li><strong>scorers (list[metrics.MetricKind]):</strong>  metrics for the evaluation.</li>\n<li><strong>splitter (splitters.SplitterKind):</strong>  splitter for datasets.</li>\n<li><strong>registry_alias (str):</strong>  alias of model.</li>\n</ul>\n", "bases": "Job"}, "bikes.jobs.TrainingJob.run": {"fullname": "bikes.jobs.TrainingJob.run", "modulename": "bikes.jobs", "qualname": "TrainingJob.run", "kind": "function", "doc": "<p>Run the job in context.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Locals: local job variables.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "bikes.jobs.InferenceJob": {"fullname": "bikes.jobs.InferenceJob", "modulename": "bikes.jobs", "qualname": "InferenceJob", "kind": "class", "doc": "<p>Load a model and generate predictions.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>inputs (datasets.ReaderKind):</strong>  dataset reader with inputs variables.</li>\n<li><strong>outputs (datasets.WriterKind):</strong>  dataset writer for the model outputs.</li>\n<li><strong>registry_alias (str):</strong>  alias of the model to load.</li>\n<li><strong>loader (registers.LoaderKind):</strong>  load the model from registry.</li>\n</ul>\n", "bases": "Job"}, "bikes.jobs.InferenceJob.run": {"fullname": "bikes.jobs.InferenceJob.run", "modulename": "bikes.jobs", "qualname": "InferenceJob.run", "kind": "function", "doc": "<p>Run the job in context.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Locals: local job variables.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "bikes.metrics": {"fullname": "bikes.metrics", "modulename": "bikes.metrics", "kind": "module", "doc": "<p>Evaluate model performance with metrics.</p>\n"}, "bikes.metrics.Metric": {"fullname": "bikes.metrics.Metric", "modulename": "bikes.metrics", "qualname": "Metric", "kind": "class", "doc": "<p>Base class for a metric.</p>\n\n<p>Use metrics to evaluate model performance.\ne.g., accuracy, precision, recall, mae, f1, ...</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>name (str):</strong>  name of the metric.</li>\n</ul>\n", "bases": "abc.ABC, pydantic.main.BaseModel"}, "bikes.metrics.Metric.score": {"fullname": "bikes.metrics.Metric.score", "modulename": "bikes.metrics", "qualname": "Metric.score", "kind": "function", "doc": "<p>Score the outputs against the targets.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>targets (schemas.Targets):</strong>  expected values.</li>\n<li><strong>outputs (schemas.Outputs):</strong>  predicted values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: metric result.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">outputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">OutputsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "bikes.metrics.Metric.scorer": {"fullname": "bikes.metrics.Metric.scorer", "modulename": "bikes.metrics", "qualname": "Metric.scorer", "kind": "function", "doc": "<p>Score the model outputs against the targets.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (models.Model):</strong>  model to evaluate.</li>\n<li><strong>inputs (schemas.Inputs):</strong>  model inputs values.</li>\n<li><strong>targets (schemas.Targets):</strong>  model expected values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: metric result.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "bikes.metrics.SklearnMetric": {"fullname": "bikes.metrics.SklearnMetric", "modulename": "bikes.metrics", "qualname": "SklearnMetric", "kind": "class", "doc": "<p>Compute metrics with sklearn.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>name (str):</strong>  name of the sklearn metric.</li>\n<li><strong>greater_is_better (bool):</strong>  maximize or minimize.</li>\n</ul>\n", "bases": "Metric"}, "bikes.metrics.SklearnMetric.score": {"fullname": "bikes.metrics.SklearnMetric.score", "modulename": "bikes.metrics", "qualname": "SklearnMetric.score", "kind": "function", "doc": "<p>Score the outputs against the targets.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>targets (schemas.Targets):</strong>  expected values.</li>\n<li><strong>outputs (schemas.Outputs):</strong>  predicted values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: metric result.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">outputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">OutputsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "bikes.models": {"fullname": "bikes.models", "modulename": "bikes.models", "kind": "module", "doc": "<p>Define trainable machine learning models.</p>\n"}, "bikes.models.Model": {"fullname": "bikes.models.Model", "modulename": "bikes.models", "qualname": "Model", "kind": "class", "doc": "<p>Base class for a model.</p>\n\n<p>Use a model to adapt AI/ML frameworks.\ne.g., to swap easily one model with another.</p>\n", "bases": "abc.ABC, pydantic.main.BaseModel"}, "bikes.models.Model.get_params": {"fullname": "bikes.models.Model.get_params", "modulename": "bikes.models", "qualname": "Model.get_params", "kind": "function", "doc": "<p>Get the model params.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>deep (bool, optional):</strong>  ignored. Defaults to True.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Params: internal model parameters.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">deep</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "bikes.models.Model.set_params": {"fullname": "bikes.models.Model.set_params", "modulename": "bikes.models", "qualname": "Model.set_params", "kind": "function", "doc": "<p>Set the model params in place.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>T.Self: instance of the model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "bikes.models.Model.fit": {"fullname": "bikes.models.Model.fit", "modulename": "bikes.models", "qualname": "Model.fit", "kind": "function", "doc": "<p>Fit the model on the given inputs and targets.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (schemas.Inputs):</strong>  model training inputs.</li>\n<li><strong>targets (schemas.Targets):</strong>  model training targets.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Model: instance of the model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "bikes.models.Model.predict": {"fullname": "bikes.models.Model.predict", "modulename": "bikes.models", "qualname": "Model.predict", "kind": "function", "doc": "<p>Generate outputs with the model for the given inputs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (schemas.Inputs):</strong>  model prediction inputs.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>schemas.Outputs: model prediction outputs.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">OutputsSchema</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "bikes.models.BaselineSklearnModel": {"fullname": "bikes.models.BaselineSklearnModel", "modulename": "bikes.models", "qualname": "BaselineSklearnModel", "kind": "class", "doc": "<p>Simple baseline model built on top of sklearn.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>max_depth (int):</strong>  maximum depth of the random forest.</li>\n<li><strong>n_estimators (int):</strong>  number of estimators in the random forest.</li>\n<li><strong>random_state (int, optional):</strong>  random state of the machine learning pipeline.</li>\n</ul>\n", "bases": "Model"}, "bikes.models.BaselineSklearnModel.fit": {"fullname": "bikes.models.BaselineSklearnModel.fit", "modulename": "bikes.models", "qualname": "BaselineSklearnModel.fit", "kind": "function", "doc": "<p>Fit the model on the given inputs and targets.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (schemas.Inputs):</strong>  model training inputs.</li>\n<li><strong>targets (schemas.Targets):</strong>  model training targets.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Model: instance of the model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BaselineSklearnModel</span>:</span></span>", "funcdef": "def"}, "bikes.models.BaselineSklearnModel.predict": {"fullname": "bikes.models.BaselineSklearnModel.predict", "modulename": "bikes.models", "qualname": "BaselineSklearnModel.predict", "kind": "function", "doc": "<p>Generate outputs with the model for the given inputs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (schemas.Inputs):</strong>  model prediction inputs.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>schemas.Outputs: model prediction outputs.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">OutputsSchema</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "bikes.models.BaselineSklearnModel.model_post_init": {"fullname": "bikes.models.BaselineSklearnModel.model_post_init", "modulename": "bikes.models", "qualname": "BaselineSklearnModel.model_post_init", "kind": "function", "doc": "<p>This function is meant to behave like a BaseModel method to initialise private attributes.</p>\n\n<p>It takes context as an argument since that's what pydantic-core passes when calling it.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>self:</strong>  The BaseModel instance.</li>\n<li><strong>__context:</strong>  The context.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span><span class=\"p\">:</span> <span class=\"n\">pydantic</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span>, </span><span class=\"param\"><span class=\"n\">__context</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "bikes.registers": {"fullname": "bikes.registers", "modulename": "bikes.registers", "kind": "module", "doc": "<p>Adapters, signers, savers, and loaders for model registries.</p>\n"}, "bikes.registers.CustomAdapter": {"fullname": "bikes.registers.CustomAdapter", "modulename": "bikes.registers", "qualname": "CustomAdapter", "kind": "class", "doc": "<p>Adapt a custom model to the MLflow PyFunc flavor.</p>\n\n<p><a href=\"https://mlflow.org/docs/latest/python_api/mlflow.pyfunc.html\">https://mlflow.org/docs/latest/python_api/mlflow.pyfunc.html</a></p>\n", "bases": "mlflow.pyfunc.model.PythonModel"}, "bikes.registers.CustomAdapter.__init__": {"fullname": "bikes.registers.CustomAdapter.__init__", "modulename": "bikes.registers", "qualname": "CustomAdapter.__init__", "kind": "function", "doc": "<p>Initialize the custom adapter.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (models.Model):</strong>  project model.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span></span>)</span>"}, "bikes.registers.CustomAdapter.predict": {"fullname": "bikes.registers.CustomAdapter.predict", "modulename": "bikes.registers", "qualname": "CustomAdapter.predict", "kind": "function", "doc": "<p>Generate predictions from a custom model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>context (mlflow.pyfunc.PythonModelContext):</strong>  ignored.</li>\n<li><strong>inputs (schemas.Inputs):</strong>  inputs for the model.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>schemas.Outputs: outputs of the model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">pyfunc</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">PythonModelContext</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">OutputsSchema</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "bikes.registers.Signer": {"fullname": "bikes.registers.Signer", "modulename": "bikes.registers", "qualname": "Signer", "kind": "class", "doc": "<p>Base class for making signatures.</p>\n\n<p>Allow to switch between signing approaches.\ne.g., automatic inference vs manual signatures\n<a href=\"https://mlflow.org/docs/latest/models.html#model-signature-and-input-example\">https://mlflow.org/docs/latest/models.html#model-signature-and-input-example</a></p>\n", "bases": "abc.ABC, pydantic.main.BaseModel"}, "bikes.registers.Signer.sign": {"fullname": "bikes.registers.Signer.sign", "modulename": "bikes.registers", "qualname": "Signer.sign", "kind": "function", "doc": "<p>Make a model signature from inputs/outputs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (schemas.Inputs):</strong>  inputs of the model.</li>\n<li><strong>outputs (schemas.Outputs):</strong>  ouputs of the model.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ModelSignature: generated signature for the model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">outputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">OutputsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">signature</span><span class=\"o\">.</span><span class=\"n\">ModelSignature</span>:</span></span>", "funcdef": "def"}, "bikes.registers.InferSigner": {"fullname": "bikes.registers.InferSigner", "modulename": "bikes.registers", "qualname": "InferSigner", "kind": "class", "doc": "<p>Generate model signatures from data inference.</p>\n", "bases": "Signer"}, "bikes.registers.InferSigner.sign": {"fullname": "bikes.registers.InferSigner.sign", "modulename": "bikes.registers", "qualname": "InferSigner.sign", "kind": "function", "doc": "<p>Make a model signature from inputs/outputs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (schemas.Inputs):</strong>  inputs of the model.</li>\n<li><strong>outputs (schemas.Outputs):</strong>  ouputs of the model.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ModelSignature: generated signature for the model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">outputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">OutputsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">signature</span><span class=\"o\">.</span><span class=\"n\">ModelSignature</span>:</span></span>", "funcdef": "def"}, "bikes.registers.Saver": {"fullname": "bikes.registers.Saver", "modulename": "bikes.registers", "qualname": "Saver", "kind": "class", "doc": "<p>Base class for saving models in registry.</p>\n\n<p>Separate model definition from serialization.\ne.g., to switch between serialization flavors.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>path (str):</strong>  model path inside the MLflow artifact store.</li>\n</ul>\n", "bases": "abc.ABC, pydantic.main.BaseModel"}, "bikes.registers.Saver.save": {"fullname": "bikes.registers.Saver.save", "modulename": "bikes.registers", "qualname": "Saver.save", "kind": "function", "doc": "<p>Save a model in the model registry.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (models.Model):</strong>  model to save.</li>\n<li><strong>signature (Signature):</strong>  model signature.</li>\n<li><strong>input_example (schemas.Inputs):</strong>  inputs sample.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Info: model saving information.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span>,</span><span class=\"param\">\t<span class=\"n\">signature</span><span class=\"p\">:</span> <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">signature</span><span class=\"o\">.</span><span class=\"n\">ModelSignature</span>,</span><span class=\"param\">\t<span class=\"n\">input_example</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ModelInfo</span>:</span></span>", "funcdef": "def"}, "bikes.registers.CustomSaver": {"fullname": "bikes.registers.CustomSaver", "modulename": "bikes.registers", "qualname": "CustomSaver", "kind": "class", "doc": "<p>Saver for custom models using the MLflow PyFunc module.</p>\n\n<p><a href=\"https://mlflow.org/docs/latest/python_api/mlflow.pyfunc.html\">https://mlflow.org/docs/latest/python_api/mlflow.pyfunc.html</a></p>\n", "bases": "Saver"}, "bikes.registers.CustomSaver.save": {"fullname": "bikes.registers.CustomSaver.save", "modulename": "bikes.registers", "qualname": "CustomSaver.save", "kind": "function", "doc": "<p>Save a custom model to the MLflow Model Registry.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span>,</span><span class=\"param\">\t<span class=\"n\">signature</span><span class=\"p\">:</span> <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">signature</span><span class=\"o\">.</span><span class=\"n\">ModelSignature</span>,</span><span class=\"param\">\t<span class=\"n\">input_example</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ModelInfo</span>:</span></span>", "funcdef": "def"}, "bikes.registers.Loader": {"fullname": "bikes.registers.Loader", "modulename": "bikes.registers", "qualname": "Loader", "kind": "class", "doc": "<p>Base class for loading models from registry.</p>\n\n<p>Separate model definition from deserialization.\ne.g., to switch between deserialization flavors.</p>\n", "bases": "abc.ABC, pydantic.main.BaseModel"}, "bikes.registers.Loader.load": {"fullname": "bikes.registers.Loader.load", "modulename": "bikes.registers", "qualname": "Loader.load", "kind": "function", "doc": "<p>Load a model from the model registry.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>uri (str):</strong>  URI of the model to load.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>T.Any: model loaded from registry.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">uri</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "bikes.registers.CustomLoader": {"fullname": "bikes.registers.CustomLoader", "modulename": "bikes.registers", "qualname": "CustomLoader", "kind": "class", "doc": "<p>Loader for custom models using the MLflow PyFunc module.</p>\n\n<p><a href=\"https://mlflow.org/docs/latest/python_api/mlflow.pyfunc.html\">https://mlflow.org/docs/latest/python_api/mlflow.pyfunc.html</a></p>\n", "bases": "Loader"}, "bikes.registers.CustomLoader.load": {"fullname": "bikes.registers.CustomLoader.load", "modulename": "bikes.registers", "qualname": "CustomLoader.load", "kind": "function", "doc": "<p>Load a model from the model registry.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>uri (str):</strong>  URI of the model to load.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>T.Any: model loaded from registry.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">uri</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">pyfunc</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">PythonModel</span>:</span></span>", "funcdef": "def"}, "bikes.schemas": {"fullname": "bikes.schemas", "modulename": "bikes.schemas", "kind": "module", "doc": "<p>Define and validate dataframe schemas.</p>\n"}, "bikes.schemas.Schema": {"fullname": "bikes.schemas.Schema", "modulename": "bikes.schemas", "qualname": "Schema", "kind": "class", "doc": "<p>Base class for a dataframe schema.</p>\n\n<p>Use a schema to type your dataframe object.\ne.g., to communicate and validate its fields.</p>\n", "bases": "pandera.api.pandas.model.DataFrameModel"}, "bikes.schemas.Schema.__init__": {"fullname": "bikes.schemas.Schema.__init__", "modulename": "bikes.schemas", "qualname": "Schema.__init__", "kind": "function", "doc": "<p>Check if all columns in a dataframe have a column in the Schema.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pd.DataFrame check_obj</strong>:  the dataframe to be validated.</li>\n<li><strong>head</strong>:  validate the first n rows. Rows overlapping with <code>tail</code> or\n<code>sample</code> are de-duplicated.</li>\n<li><strong>tail</strong>:  validate the last n rows. Rows overlapping with <code>head</code> or\n<code>sample</code> are de-duplicated.</li>\n<li><strong>sample</strong>:  validate a random sample of n rows. Rows overlapping\nwith <code>head</code> or <code>tail</code> are de-duplicated.</li>\n<li><strong>random_state</strong>:  random seed for the <code>sample</code> argument.</li>\n<li><strong>lazy</strong>:  if True, lazily evaluates dataframe against all validation\nchecks and raises a <code>SchemaErrors</code>. Otherwise, raise\n<code>SchemaError</code> as soon as one occurs.</li>\n<li><strong>inplace</strong>:  if True, applies coercion to the object of validation,\notherwise creates a copy of the data.\n:returns: validated <code>DataFrame</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>SchemaError</strong>:  when <code>DataFrame</code> violates built-in or custom\nchecks.</li>\n</ul>\n\n<p>:example:</p>\n\n<p>Calling <code>schema.validate</code> returns the dataframe.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandera</span> <span class=\"k\">as</span> <span class=\"nn\">pa</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;probability&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.52</span><span class=\"p\">,</span> <span class=\"mf\">0.23</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.76</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;cat&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;duck&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">]</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">schema_withchecks</span> <span class=\"o\">=</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">DataFrameSchema</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;probability&quot;</span><span class=\"p\">:</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Check</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">))),</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># check that the &quot;category&quot; column contains a few discrete</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># values, and the majority of the entries are dogs.</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">:</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n<span class=\"gp\">... </span>            <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Check</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">isin</span><span class=\"p\">([</span><span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;cat&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;duck&quot;</span><span class=\"p\">])),</span>\n<span class=\"gp\">... </span>            <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Check</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>        <span class=\"p\">]),</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">schema_withchecks</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)[[</span><span class=\"s2\">&quot;probability&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">]]</span>\n<span class=\"go\">   probability category</span>\n<span class=\"go\">0         0.10      dog</span>\n<span class=\"go\">1         0.40      dog</span>\n<span class=\"go\">2         0.52      cat</span>\n<span class=\"go\">3         0.23     duck</span>\n<span class=\"go\">4         0.80      dog</span>\n<span class=\"go\">5         0.76      dog</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "bikes.schemas.Schema.Config": {"fullname": "bikes.schemas.Schema.Config", "modulename": "bikes.schemas", "qualname": "Schema.Config", "kind": "class", "doc": "<p>Default configuration.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>coerce (bool):</strong>  convert data type if possible.</li>\n<li><strong>strict (bool):</strong>  ensure the data type is correct.</li>\n</ul>\n"}, "bikes.schemas.Schema.check": {"fullname": "bikes.schemas.Schema.check", "modulename": "bikes.schemas", "qualname": "Schema.check", "kind": "function", "doc": "<p>Check the data with this schema.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (pd.DataFrame):</strong>  dataframe to check.</li>\n<li><strong>kwargs:</strong>  additional arguments to validate().</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pd.DataFrame: validated dataframe with schema.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bikes.schemas.InputsSchema": {"fullname": "bikes.schemas.InputsSchema", "modulename": "bikes.schemas", "qualname": "InputsSchema", "kind": "class", "doc": "<p>Schema for the project inputs.</p>\n", "bases": "Schema"}, "bikes.schemas.InputsSchema.__init__": {"fullname": "bikes.schemas.InputsSchema.__init__", "modulename": "bikes.schemas", "qualname": "InputsSchema.__init__", "kind": "function", "doc": "<p>Check if all columns in a dataframe have a column in the Schema.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pd.DataFrame check_obj</strong>:  the dataframe to be validated.</li>\n<li><strong>head</strong>:  validate the first n rows. Rows overlapping with <code>tail</code> or\n<code>sample</code> are de-duplicated.</li>\n<li><strong>tail</strong>:  validate the last n rows. Rows overlapping with <code>head</code> or\n<code>sample</code> are de-duplicated.</li>\n<li><strong>sample</strong>:  validate a random sample of n rows. Rows overlapping\nwith <code>head</code> or <code>tail</code> are de-duplicated.</li>\n<li><strong>random_state</strong>:  random seed for the <code>sample</code> argument.</li>\n<li><strong>lazy</strong>:  if True, lazily evaluates dataframe against all validation\nchecks and raises a <code>SchemaErrors</code>. Otherwise, raise\n<code>SchemaError</code> as soon as one occurs.</li>\n<li><strong>inplace</strong>:  if True, applies coercion to the object of validation,\notherwise creates a copy of the data.\n:returns: validated <code>DataFrame</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>SchemaError</strong>:  when <code>DataFrame</code> violates built-in or custom\nchecks.</li>\n</ul>\n\n<p>:example:</p>\n\n<p>Calling <code>schema.validate</code> returns the dataframe.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandera</span> <span class=\"k\">as</span> <span class=\"nn\">pa</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;probability&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.52</span><span class=\"p\">,</span> <span class=\"mf\">0.23</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.76</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;cat&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;duck&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">]</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">schema_withchecks</span> <span class=\"o\">=</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">DataFrameSchema</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;probability&quot;</span><span class=\"p\">:</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Check</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">))),</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># check that the &quot;category&quot; column contains a few discrete</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># values, and the majority of the entries are dogs.</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">:</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n<span class=\"gp\">... </span>            <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Check</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">isin</span><span class=\"p\">([</span><span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;cat&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;duck&quot;</span><span class=\"p\">])),</span>\n<span class=\"gp\">... </span>            <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Check</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>        <span class=\"p\">]),</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">schema_withchecks</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)[[</span><span class=\"s2\">&quot;probability&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">]]</span>\n<span class=\"go\">   probability category</span>\n<span class=\"go\">0         0.10      dog</span>\n<span class=\"go\">1         0.40      dog</span>\n<span class=\"go\">2         0.52      cat</span>\n<span class=\"go\">3         0.23     duck</span>\n<span class=\"go\">4         0.80      dog</span>\n<span class=\"go\">5         0.76      dog</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "bikes.schemas.InputsSchema.instant": {"fullname": "bikes.schemas.InputsSchema.instant", "modulename": "bikes.schemas", "qualname": "InputsSchema.instant", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Index[pandera.dtypes.UInt32]"}, "bikes.schemas.InputsSchema.dteday": {"fullname": "bikes.schemas.InputsSchema.dteday", "modulename": "bikes.schemas", "qualname": "InputsSchema.dteday", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.Timestamp]"}, "bikes.schemas.InputsSchema.season": {"fullname": "bikes.schemas.InputsSchema.season", "modulename": "bikes.schemas", "qualname": "InputsSchema.season", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.UInt8]"}, "bikes.schemas.InputsSchema.yr": {"fullname": "bikes.schemas.InputsSchema.yr", "modulename": "bikes.schemas", "qualname": "InputsSchema.yr", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.UInt8]"}, "bikes.schemas.InputsSchema.mnth": {"fullname": "bikes.schemas.InputsSchema.mnth", "modulename": "bikes.schemas", "qualname": "InputsSchema.mnth", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.UInt8]"}, "bikes.schemas.InputsSchema.hr": {"fullname": "bikes.schemas.InputsSchema.hr", "modulename": "bikes.schemas", "qualname": "InputsSchema.hr", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.UInt8]"}, "bikes.schemas.InputsSchema.holiday": {"fullname": "bikes.schemas.InputsSchema.holiday", "modulename": "bikes.schemas", "qualname": "InputsSchema.holiday", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.Bool]"}, "bikes.schemas.InputsSchema.weekday": {"fullname": "bikes.schemas.InputsSchema.weekday", "modulename": "bikes.schemas", "qualname": "InputsSchema.weekday", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.UInt8]"}, "bikes.schemas.InputsSchema.workingday": {"fullname": "bikes.schemas.InputsSchema.workingday", "modulename": "bikes.schemas", "qualname": "InputsSchema.workingday", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.Bool]"}, "bikes.schemas.InputsSchema.weathersit": {"fullname": "bikes.schemas.InputsSchema.weathersit", "modulename": "bikes.schemas", "qualname": "InputsSchema.weathersit", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.UInt8]"}, "bikes.schemas.InputsSchema.temp": {"fullname": "bikes.schemas.InputsSchema.temp", "modulename": "bikes.schemas", "qualname": "InputsSchema.temp", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.Float16]"}, "bikes.schemas.InputsSchema.atemp": {"fullname": "bikes.schemas.InputsSchema.atemp", "modulename": "bikes.schemas", "qualname": "InputsSchema.atemp", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.Float16]"}, "bikes.schemas.InputsSchema.hum": {"fullname": "bikes.schemas.InputsSchema.hum", "modulename": "bikes.schemas", "qualname": "InputsSchema.hum", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.Float16]"}, "bikes.schemas.InputsSchema.windspeed": {"fullname": "bikes.schemas.InputsSchema.windspeed", "modulename": "bikes.schemas", "qualname": "InputsSchema.windspeed", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.Float16]"}, "bikes.schemas.InputsSchema.casual": {"fullname": "bikes.schemas.InputsSchema.casual", "modulename": "bikes.schemas", "qualname": "InputsSchema.casual", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.UInt32]"}, "bikes.schemas.InputsSchema.registered": {"fullname": "bikes.schemas.InputsSchema.registered", "modulename": "bikes.schemas", "qualname": "InputsSchema.registered", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.UInt32]"}, "bikes.schemas.InputsSchema.Config": {"fullname": "bikes.schemas.InputsSchema.Config", "modulename": "bikes.schemas", "qualname": "InputsSchema.Config", "kind": "class", "doc": "<p>Define DataFrameSchema-wide options.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "bases": "pandera.api.pandas.model_config.BaseConfig"}, "bikes.schemas.TargetsSchema": {"fullname": "bikes.schemas.TargetsSchema", "modulename": "bikes.schemas", "qualname": "TargetsSchema", "kind": "class", "doc": "<p>Schema for the project target.</p>\n", "bases": "Schema"}, "bikes.schemas.TargetsSchema.__init__": {"fullname": "bikes.schemas.TargetsSchema.__init__", "modulename": "bikes.schemas", "qualname": "TargetsSchema.__init__", "kind": "function", "doc": "<p>Check if all columns in a dataframe have a column in the Schema.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pd.DataFrame check_obj</strong>:  the dataframe to be validated.</li>\n<li><strong>head</strong>:  validate the first n rows. Rows overlapping with <code>tail</code> or\n<code>sample</code> are de-duplicated.</li>\n<li><strong>tail</strong>:  validate the last n rows. Rows overlapping with <code>head</code> or\n<code>sample</code> are de-duplicated.</li>\n<li><strong>sample</strong>:  validate a random sample of n rows. Rows overlapping\nwith <code>head</code> or <code>tail</code> are de-duplicated.</li>\n<li><strong>random_state</strong>:  random seed for the <code>sample</code> argument.</li>\n<li><strong>lazy</strong>:  if True, lazily evaluates dataframe against all validation\nchecks and raises a <code>SchemaErrors</code>. Otherwise, raise\n<code>SchemaError</code> as soon as one occurs.</li>\n<li><strong>inplace</strong>:  if True, applies coercion to the object of validation,\notherwise creates a copy of the data.\n:returns: validated <code>DataFrame</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>SchemaError</strong>:  when <code>DataFrame</code> violates built-in or custom\nchecks.</li>\n</ul>\n\n<p>:example:</p>\n\n<p>Calling <code>schema.validate</code> returns the dataframe.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandera</span> <span class=\"k\">as</span> <span class=\"nn\">pa</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;probability&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.52</span><span class=\"p\">,</span> <span class=\"mf\">0.23</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.76</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;cat&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;duck&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">]</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">schema_withchecks</span> <span class=\"o\">=</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">DataFrameSchema</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;probability&quot;</span><span class=\"p\">:</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Check</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">))),</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># check that the &quot;category&quot; column contains a few discrete</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># values, and the majority of the entries are dogs.</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">:</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n<span class=\"gp\">... </span>            <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Check</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">isin</span><span class=\"p\">([</span><span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;cat&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;duck&quot;</span><span class=\"p\">])),</span>\n<span class=\"gp\">... </span>            <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Check</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>        <span class=\"p\">]),</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">schema_withchecks</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)[[</span><span class=\"s2\">&quot;probability&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">]]</span>\n<span class=\"go\">   probability category</span>\n<span class=\"go\">0         0.10      dog</span>\n<span class=\"go\">1         0.40      dog</span>\n<span class=\"go\">2         0.52      cat</span>\n<span class=\"go\">3         0.23     duck</span>\n<span class=\"go\">4         0.80      dog</span>\n<span class=\"go\">5         0.76      dog</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "bikes.schemas.TargetsSchema.instant": {"fullname": "bikes.schemas.TargetsSchema.instant", "modulename": "bikes.schemas", "qualname": "TargetsSchema.instant", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Index[pandera.dtypes.UInt32]"}, "bikes.schemas.TargetsSchema.cnt": {"fullname": "bikes.schemas.TargetsSchema.cnt", "modulename": "bikes.schemas", "qualname": "TargetsSchema.cnt", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.UInt32]"}, "bikes.schemas.TargetsSchema.Config": {"fullname": "bikes.schemas.TargetsSchema.Config", "modulename": "bikes.schemas", "qualname": "TargetsSchema.Config", "kind": "class", "doc": "<p>Define DataFrameSchema-wide options.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "bases": "pandera.api.pandas.model_config.BaseConfig"}, "bikes.schemas.OutputsSchema": {"fullname": "bikes.schemas.OutputsSchema", "modulename": "bikes.schemas", "qualname": "OutputsSchema", "kind": "class", "doc": "<p>Schema for the project output.</p>\n", "bases": "Schema"}, "bikes.schemas.OutputsSchema.__init__": {"fullname": "bikes.schemas.OutputsSchema.__init__", "modulename": "bikes.schemas", "qualname": "OutputsSchema.__init__", "kind": "function", "doc": "<p>Check if all columns in a dataframe have a column in the Schema.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pd.DataFrame check_obj</strong>:  the dataframe to be validated.</li>\n<li><strong>head</strong>:  validate the first n rows. Rows overlapping with <code>tail</code> or\n<code>sample</code> are de-duplicated.</li>\n<li><strong>tail</strong>:  validate the last n rows. Rows overlapping with <code>head</code> or\n<code>sample</code> are de-duplicated.</li>\n<li><strong>sample</strong>:  validate a random sample of n rows. Rows overlapping\nwith <code>head</code> or <code>tail</code> are de-duplicated.</li>\n<li><strong>random_state</strong>:  random seed for the <code>sample</code> argument.</li>\n<li><strong>lazy</strong>:  if True, lazily evaluates dataframe against all validation\nchecks and raises a <code>SchemaErrors</code>. Otherwise, raise\n<code>SchemaError</code> as soon as one occurs.</li>\n<li><strong>inplace</strong>:  if True, applies coercion to the object of validation,\notherwise creates a copy of the data.\n:returns: validated <code>DataFrame</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>SchemaError</strong>:  when <code>DataFrame</code> violates built-in or custom\nchecks.</li>\n</ul>\n\n<p>:example:</p>\n\n<p>Calling <code>schema.validate</code> returns the dataframe.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandera</span> <span class=\"k\">as</span> <span class=\"nn\">pa</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;probability&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.52</span><span class=\"p\">,</span> <span class=\"mf\">0.23</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.76</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;cat&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;duck&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">]</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">schema_withchecks</span> <span class=\"o\">=</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">DataFrameSchema</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;probability&quot;</span><span class=\"p\">:</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Check</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">))),</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># check that the &quot;category&quot; column contains a few discrete</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># values, and the majority of the entries are dogs.</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">:</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n<span class=\"gp\">... </span>            <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Check</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">isin</span><span class=\"p\">([</span><span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;cat&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;duck&quot;</span><span class=\"p\">])),</span>\n<span class=\"gp\">... </span>            <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">Check</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>        <span class=\"p\">]),</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">schema_withchecks</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)[[</span><span class=\"s2\">&quot;probability&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">]]</span>\n<span class=\"go\">   probability category</span>\n<span class=\"go\">0         0.10      dog</span>\n<span class=\"go\">1         0.40      dog</span>\n<span class=\"go\">2         0.52      cat</span>\n<span class=\"go\">3         0.23     duck</span>\n<span class=\"go\">4         0.80      dog</span>\n<span class=\"go\">5         0.76      dog</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "bikes.schemas.OutputsSchema.instant": {"fullname": "bikes.schemas.OutputsSchema.instant", "modulename": "bikes.schemas", "qualname": "OutputsSchema.instant", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Index[pandera.dtypes.UInt32]"}, "bikes.schemas.OutputsSchema.prediction": {"fullname": "bikes.schemas.OutputsSchema.prediction", "modulename": "bikes.schemas", "qualname": "OutputsSchema.prediction", "kind": "variable", "doc": "<p>Captures extra information about a field.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "annotation": ": pandera.typing.pandas.Series[pandera.dtypes.UInt32]"}, "bikes.schemas.OutputsSchema.Config": {"fullname": "bikes.schemas.OutputsSchema.Config", "modulename": "bikes.schemas", "qualname": "OutputsSchema.Config", "kind": "class", "doc": "<p>Define DataFrameSchema-wide options.</p>\n\n<p><em>new in 0.5.0</em></p>\n", "bases": "pandera.api.pandas.model_config.BaseConfig"}, "bikes.scripts": {"fullname": "bikes.scripts", "modulename": "bikes.scripts", "kind": "module", "doc": "<p>Command-line interface for the program.</p>\n"}, "bikes.scripts.Settings": {"fullname": "bikes.scripts.Settings", "modulename": "bikes.scripts", "qualname": "Settings", "kind": "class", "doc": "<p>Settings for the program.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>job (jobs.JobKind):</strong>  job associated with settings.</li>\n</ul>\n", "bases": "pydantic_settings.main.BaseSettings"}, "bikes.scripts.main": {"fullname": "bikes.scripts.main", "modulename": "bikes.scripts", "qualname": "main", "kind": "function", "doc": "<p>Main function of the program.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>argv (list[str] | None, optional):</strong>  program arguments. Defaults to None for sys.argv.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: status code of the program.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">argv</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "bikes.searchers": {"fullname": "bikes.searchers", "modulename": "bikes.searchers", "kind": "module", "doc": "<p>Find the best hyperparameters for a model.</p>\n"}, "bikes.searchers.Searcher": {"fullname": "bikes.searchers.Searcher", "modulename": "bikes.searchers", "qualname": "Searcher", "kind": "class", "doc": "<p>Base class for a searcher.</p>\n\n<p>note: use searcher to tune models.\ne.g., to find the best model params.</p>\n", "bases": "abc.ABC, pydantic.main.BaseModel"}, "bikes.searchers.Searcher.search": {"fullname": "bikes.searchers.Searcher.search", "modulename": "bikes.searchers", "qualname": "Searcher.search", "kind": "function", "doc": "<p>Search the best model for the given inputs and targets.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (models.Model):</strong>  machine learning model to tune.</li>\n<li><strong>metric (metrics.Metric):</strong>  main metric to optimize.</li>\n<li><strong>cv (CrossValidation):</strong>  structure for cross-fold.</li>\n<li><strong>inputs (schemas.Inputs):</strong>  model inputs for tuning.</li>\n<li><strong>targets (schemas.Targets):</strong>  model targets for tuning.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Results: all the results of the tuning process.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span><span class=\"p\">:</span> <span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">Metric</span>,</span><span class=\"param\">\t<span class=\"n\">cv</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]],</span> <span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">splitters</span><span class=\"o\">.</span><span class=\"n\">Splitter</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "bikes.searchers.GridCVSearcher": {"fullname": "bikes.searchers.GridCVSearcher", "modulename": "bikes.searchers", "qualname": "GridCVSearcher", "kind": "class", "doc": "<p>Grid searcher with cross-folds.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>param_grid (Grid):</strong>  mapping of param key -> values.</li>\n<li><strong>n_jobs (int, optional):</strong>  number of jobs to run in parallel.</li>\n<li><strong>refit (bool):</strong>  refit the model after the tuning.</li>\n<li><strong>verbose (int):</strong>  set the search verbosity level.</li>\n<li><strong>error_score (str | float):</strong>  strategy or value on error.</li>\n<li><strong>return_train_score (bool):</strong>  include train scores.</li>\n</ul>\n", "bases": "Searcher"}, "bikes.searchers.GridCVSearcher.search": {"fullname": "bikes.searchers.GridCVSearcher.search", "modulename": "bikes.searchers", "qualname": "GridCVSearcher.search", "kind": "function", "doc": "<p>Search the best model for the given inputs and targets.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (models.Model):</strong>  machine learning model to tune.</li>\n<li><strong>metric (metrics.Metric):</strong>  main metric to optimize.</li>\n<li><strong>cv (CrossValidation):</strong>  structure for cross-fold.</li>\n<li><strong>inputs (schemas.Inputs):</strong>  model inputs for tuning.</li>\n<li><strong>targets (schemas.Targets):</strong>  model targets for tuning.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Results: all the results of the tuning process.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span><span class=\"p\">:</span> <span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">Metric</span>,</span><span class=\"param\">\t<span class=\"n\">cv</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]],</span> <span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">splitters</span><span class=\"o\">.</span><span class=\"n\">Splitter</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "bikes.services": {"fullname": "bikes.services", "modulename": "bikes.services", "kind": "module", "doc": "<p>Manage global context during execution.</p>\n"}, "bikes.services.Service": {"fullname": "bikes.services.Service", "modulename": "bikes.services", "qualname": "Service", "kind": "class", "doc": "<p>Base class for a global service.</p>\n\n<p>Use services to manage global contexts.\ne.g., logger object, mlflow client, spark context, ...</p>\n", "bases": "abc.ABC, pydantic.main.BaseModel"}, "bikes.services.Service.start": {"fullname": "bikes.services.Service.start", "modulename": "bikes.services", "qualname": "Service.start", "kind": "function", "doc": "<p>Start the service.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "bikes.services.Service.stop": {"fullname": "bikes.services.Service.stop", "modulename": "bikes.services", "qualname": "Service.stop", "kind": "function", "doc": "<p>Stop the service.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "bikes.services.LoggerService": {"fullname": "bikes.services.LoggerService", "modulename": "bikes.services", "qualname": "LoggerService", "kind": "class", "doc": "<p>Service for logging messages.</p>\n\n<p><a href=\"https://loguru.readthedocs.io/en/stable/api/logger.html\">https://loguru.readthedocs.io/en/stable/api/logger.html</a></p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>sink (str):</strong>  logging output.</li>\n<li><strong>level (str):</strong>  logging level.</li>\n<li><strong>format (str):</strong>  logging format.</li>\n<li><strong>colorize (bool):</strong>  colorize output.</li>\n<li><strong>serialize (bool):</strong>  convert to JSON.</li>\n<li><strong>backtrace (bool):</strong>  enable exception trace.</li>\n<li><strong>diagnose (bool):</strong>  enable variable display.</li>\n<li><strong>catch (bool):</strong>  catch errors during log handling.</li>\n</ul>\n", "bases": "Service"}, "bikes.services.LoggerService.start": {"fullname": "bikes.services.LoggerService.start", "modulename": "bikes.services", "qualname": "LoggerService.start", "kind": "function", "doc": "<p>Start the service.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "bikes.services.MLflowService": {"fullname": "bikes.services.MLflowService", "modulename": "bikes.services", "qualname": "MLflowService", "kind": "class", "doc": "<p>Service for MLflow tracking and registry.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>autolog_disable (bool):</strong>  disable autologging.</li>\n<li><strong>autolog_disable_for_unsupported_versions (bool):</strong>  disable autologging for unsupported versions.</li>\n<li><strong>autolog_exclusive (bool):</strong>  If True, enables exclusive autologging.</li>\n<li><strong>autolog_log_input_examples (bool):</strong>  If True, logs input examples during autologging.</li>\n<li><strong>autolog_log_model_signatures (bool):</strong>  If True, logs model signatures during autologging.</li>\n<li><strong>autolog_log_models (bool):</strong>  If True, enables logging of models during autologging.</li>\n<li><strong>autolog_log_datasets (bool):</strong>  If True, logs datasets used during autologging.</li>\n<li><strong>autolog_silent (bool):</strong>  If True, suppresses all MLflow warnings during autologging.</li>\n<li><strong>tracking_uri (str):</strong>  The URI for the MLflow tracking server.</li>\n<li><strong>experiment_name (str):</strong>  The name of the experiment to log runs under.</li>\n<li><strong>registry_uri (str):</strong>  The URI for the MLflow model registry.</li>\n<li><strong>registry_name (str):</strong>  The name of the registry.</li>\n</ul>\n", "bases": "Service"}, "bikes.services.MLflowService.start": {"fullname": "bikes.services.MLflowService.start", "modulename": "bikes.services", "qualname": "MLflowService.start", "kind": "function", "doc": "<p>Start the mlflow service.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bikes.services.MLflowService.client": {"fullname": "bikes.services.MLflowService.client", "modulename": "bikes.services", "qualname": "MLflowService.client", "kind": "function", "doc": "<p>Get an instance of MLflow client.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">tracking</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">MlflowClient</span>:</span></span>", "funcdef": "def"}, "bikes.services.MLflowService.register": {"fullname": "bikes.services.MLflowService.register", "modulename": "bikes.services", "qualname": "MLflowService.register", "kind": "function", "doc": "<p>Register a model to mlflow registry.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>run_id (str):</strong>  id of mlflow run.</li>\n<li><strong>path (str):</strong>  path of artifact.</li>\n<li><strong>alias (str):</strong>  model alias.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>mlflow.entities.model_registry.ModelVersion: registered version.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">run_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">alias</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">entities</span><span class=\"o\">.</span><span class=\"n\">model_registry</span><span class=\"o\">.</span><span class=\"n\">model_version</span><span class=\"o\">.</span><span class=\"n\">ModelVersion</span>:</span></span>", "funcdef": "def"}, "bikes.splitters": {"fullname": "bikes.splitters", "modulename": "bikes.splitters", "kind": "module", "doc": "<p>Split dataframes into subsets (e.g., train/valid/test).</p>\n"}, "bikes.splitters.Splitter": {"fullname": "bikes.splitters.Splitter", "modulename": "bikes.splitters", "qualname": "Splitter", "kind": "class", "doc": "<p>Base class for a splitter.</p>\n\n<p>Use splitters to split datasets.\ne.g., split between a train/test subsets.</p>\n", "bases": "abc.ABC, pydantic.main.BaseModel"}, "bikes.splitters.Splitter.split": {"fullname": "bikes.splitters.Splitter.split", "modulename": "bikes.splitters", "qualname": "Splitter.split", "kind": "function", "doc": "<p>Split a dataframe into subsets.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (schemas.Inputs):</strong>  model inputs.</li>\n<li><strong>targets (schemas.Targets):</strong>  model targets.</li>\n<li><strong>groups (list | None, optional):</strong>  group labels. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Splits: iterator over the dataframe splits.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">groups</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "bikes.splitters.Splitter.get_n_splits": {"fullname": "bikes.splitters.Splitter.get_n_splits", "modulename": "bikes.splitters", "qualname": "Splitter.get_n_splits", "kind": "function", "doc": "<p>Get the number of splits generated.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (schemas.Inputs):</strong>  models inputs.</li>\n<li><strong>targets (schemas.Targets):</strong>  model targets.</li>\n<li><strong>groups (list | None, optional):</strong>  group labels. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: number of splits generated.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">groups</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "bikes.splitters.TrainTestSplitter": {"fullname": "bikes.splitters.TrainTestSplitter", "modulename": "bikes.splitters", "qualname": "TrainTestSplitter", "kind": "class", "doc": "<p>Split a dataframe into a train and test subsets.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>shuffle (bool):</strong>  shuffle dataset before splitting.</li>\n<li><strong>test_size (int | float):</strong>  number or ratio for the test dataset.</li>\n<li><strong>random_state (int):</strong>  random state for the splitter object.</li>\n</ul>\n", "bases": "Splitter"}, "bikes.splitters.TrainTestSplitter.split": {"fullname": "bikes.splitters.TrainTestSplitter.split", "modulename": "bikes.splitters", "qualname": "TrainTestSplitter.split", "kind": "function", "doc": "<p>Split a dataframe into subsets.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (schemas.Inputs):</strong>  model inputs.</li>\n<li><strong>targets (schemas.Targets):</strong>  model targets.</li>\n<li><strong>groups (list | None, optional):</strong>  group labels. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Splits: iterator over the dataframe splits.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">groups</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"fullname": "bikes.splitters.TrainTestSplitter.get_n_splits", "modulename": "bikes.splitters", "qualname": "TrainTestSplitter.get_n_splits", "kind": "function", "doc": "<p>Get the number of splits generated.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (schemas.Inputs):</strong>  models inputs.</li>\n<li><strong>targets (schemas.Targets):</strong>  model targets.</li>\n<li><strong>groups (list | None, optional):</strong>  group labels. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: number of splits generated.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">groups</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "bikes.splitters.TimeSeriesSplitter": {"fullname": "bikes.splitters.TimeSeriesSplitter", "modulename": "bikes.splitters", "qualname": "TimeSeriesSplitter", "kind": "class", "doc": "<p>Split a dataframe into fixed time series subsets.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>gap (int):</strong>  gap between splits.</li>\n<li><strong>n_splits (int):</strong>  number of split to generate.</li>\n<li><strong>test_size (int | float):</strong>  number or ratio for the test dataset.</li>\n</ul>\n", "bases": "Splitter"}, "bikes.splitters.TimeSeriesSplitter.split": {"fullname": "bikes.splitters.TimeSeriesSplitter.split", "modulename": "bikes.splitters", "qualname": "TimeSeriesSplitter.split", "kind": "function", "doc": "<p>Split a dataframe into subsets.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (schemas.Inputs):</strong>  model inputs.</li>\n<li><strong>targets (schemas.Targets):</strong>  model targets.</li>\n<li><strong>groups (list | None, optional):</strong>  group labels. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Splits: iterator over the dataframe splits.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">groups</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"fullname": "bikes.splitters.TimeSeriesSplitter.get_n_splits", "modulename": "bikes.splitters", "qualname": "TimeSeriesSplitter.get_n_splits", "kind": "function", "doc": "<p>Get the number of splits generated.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (schemas.Inputs):</strong>  models inputs.</li>\n<li><strong>targets (schemas.Targets):</strong>  model targets.</li>\n<li><strong>groups (list | None, optional):</strong>  group labels. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: number of splits generated.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">InputsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">pandera</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">[</span><span class=\"n\">bikes</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">TargetsSchema</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">groups</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"bikes": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "bikes.configs": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "bikes.configs.parse_file": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 45}, "bikes.configs.parse_string": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 41}, "bikes.configs.merge_configs": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 47}, "bikes.configs.to_object": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 49}, "bikes.datasets": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "bikes.datasets.Reader": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 53}, "bikes.datasets.Reader.read": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 23}, "bikes.datasets.ParquetReader": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 32}, "bikes.datasets.ParquetReader.read": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 23}, "bikes.datasets.Writer": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 29}, "bikes.datasets.Writer.write": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 27}, "bikes.datasets.ParquetWriter": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 32}, "bikes.datasets.ParquetWriter.write": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 27}, "bikes.jobs": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "bikes.jobs.Job": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 61}, "bikes.jobs.Job.run": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 22}, "bikes.jobs.TuningJob": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 124}, "bikes.jobs.TuningJob.run": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 22}, "bikes.jobs.TrainingJob": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 140}, "bikes.jobs.TrainingJob.run": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 22}, "bikes.jobs.InferenceJob": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 74}, "bikes.jobs.InferenceJob.run": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 22}, "bikes.metrics": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "bikes.metrics.Metric": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 43}, "bikes.metrics.Metric.score": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 99, "bases": 0, "doc": 51}, "bikes.metrics.Metric.scorer": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 120, "bases": 0, "doc": 66}, "bikes.metrics.SklearnMetric": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 40}, "bikes.metrics.SklearnMetric.score": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 99, "bases": 0, "doc": 51}, "bikes.models": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "bikes.models.Model": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 27}, "bikes.models.Model.get_params": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 41}, "bikes.models.Model.set_params": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 25}, "bikes.models.Model.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 99, "bases": 0, "doc": 58}, "bikes.models.Model.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 46}, "bikes.models.BaselineSklearnModel": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 66}, "bikes.models.BaselineSklearnModel.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 109, "bases": 0, "doc": 58}, "bikes.models.BaselineSklearnModel.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 46}, "bikes.models.BaselineSklearnModel.model_post_init": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 61}, "bikes.registers": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "bikes.registers.CustomAdapter": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 21}, "bikes.registers.CustomAdapter.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 25}, "bikes.registers.CustomAdapter.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 114, "bases": 0, "doc": 56}, "bikes.registers.Signer": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 32}, "bikes.registers.Signer.sign": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 114, "bases": 0, "doc": 58}, "bikes.registers.InferSigner": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "bikes.registers.InferSigner.sign": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 114, "bases": 0, "doc": 58}, "bikes.registers.Saver": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 47}, "bikes.registers.Saver.save": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 120, "bases": 0, "doc": 65}, "bikes.registers.CustomSaver": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 21}, "bikes.registers.CustomSaver.save": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 120, "bases": 0, "doc": 12}, "bikes.registers.Loader": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 25}, "bikes.registers.Loader.load": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 47}, "bikes.registers.CustomLoader": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 21}, "bikes.registers.CustomLoader.load": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 47}, "bikes.schemas": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "bikes.schemas.Schema": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 28}, "bikes.schemas.Schema.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 863}, "bikes.schemas.Schema.Config": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 39}, "bikes.schemas.Schema.check": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 54}, "bikes.schemas.InputsSchema": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "bikes.schemas.InputsSchema.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 863}, "bikes.schemas.InputsSchema.instant": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.dteday": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.season": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.yr": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.mnth": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.hr": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.holiday": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.weekday": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.workingday": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.weathersit": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.temp": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.atemp": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.hum": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.windspeed": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.casual": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.registered": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.InputsSchema.Config": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 16}, "bikes.schemas.TargetsSchema": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "bikes.schemas.TargetsSchema.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 863}, "bikes.schemas.TargetsSchema.instant": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.TargetsSchema.cnt": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.TargetsSchema.Config": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 16}, "bikes.schemas.OutputsSchema": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "bikes.schemas.OutputsSchema.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 863}, "bikes.schemas.OutputsSchema.instant": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.OutputsSchema.prediction": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bikes.schemas.OutputsSchema.Config": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 16}, "bikes.scripts": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "bikes.scripts.Settings": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 27}, "bikes.scripts.main": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 50}, "bikes.searchers": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "bikes.searchers.Searcher": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 25}, "bikes.searchers.Searcher.search": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 252, "bases": 0, "doc": 103}, "bikes.searchers.GridCVSearcher": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 103}, "bikes.searchers.GridCVSearcher.search": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 252, "bases": 0, "doc": 103}, "bikes.services": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "bikes.services.Service": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 26}, "bikes.services.Service.start": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "bikes.services.Service.stop": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "bikes.services.LoggerService": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 108}, "bikes.services.LoggerService.start": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "bikes.services.MLflowService": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 210}, "bikes.services.MLflowService.start": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 7}, "bikes.services.MLflowService.client": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 9}, "bikes.services.MLflowService.register": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 67}, "bikes.splitters": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "bikes.splitters.Splitter": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 23}, "bikes.splitters.Splitter.split": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 149, "bases": 0, "doc": 69}, "bikes.splitters.Splitter.get_n_splits": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 123, "bases": 0, "doc": 69}, "bikes.splitters.TrainTestSplitter": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 64}, "bikes.splitters.TrainTestSplitter.split": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 149, "bases": 0, "doc": 69}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 123, "bases": 0, "doc": 69}, "bikes.splitters.TimeSeriesSplitter": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 61}, "bikes.splitters.TimeSeriesSplitter.split": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 149, "bases": 0, "doc": 69}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 123, "bases": 0, "doc": 69}}, "length": 118, "save": true}, "index": {"qualname": {"root": {"docs": {"bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bikes.configs.parse_file": {"tf": 1}, "bikes.configs.parse_string": {"tf": 1}}, "df": 2}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.datasets.ParquetWriter": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}}, "df": 2}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"bikes.models.Model.get_params": {"tf": 1}, "bikes.models.Model.set_params": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.configs.parse_file": {"tf": 1}}, "df": 1}}, "t": {"docs": {"bikes.models.Model.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.configs.parse_string": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bikes.services.Service.start": {"tf": 1}, "bikes.services.LoggerService.start": {"tf": 1}, "bikes.services.MLflowService.start": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"bikes.services.Service.stop": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}}, "df": 2, "r": {"docs": {"bikes.metrics.Metric.scorer": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.Schema.Config": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1}}, "df": 4}}}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.Model.set_params": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bikes.scripts.Settings": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.schemas.InputsSchema.season": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.searchers.Searcher": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.Service": {"tf": 1}, "bikes.services.Service.start": {"tf": 1}, "bikes.services.Service.stop": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.Signer": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}}, "df": 2, "r": {"docs": {"bikes.registers.Saver": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.splitters.Splitter": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bikes.configs.merge_configs": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bikes.metrics.Metric": {"tf": 1}, "bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.models.Model": {"tf": 1}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.models.Model.set_params": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 6}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"bikes.schemas.InputsSchema.mnth": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bikes.scripts.main": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.MLflowService": {"tf": 1}, "bikes.services.MLflowService.start": {"tf": 1}, "bikes.services.MLflowService.client": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"bikes.schemas.Schema.Config": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 4, "s": {"docs": {"bikes.configs.merge_configs": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.CustomLoader": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}}, "df": 2}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"bikes.schemas.Schema.check": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bikes.schemas.InputsSchema.casual": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.TargetsSchema.cnt": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bikes.services.MLflowService.client": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"bikes.configs.to_object": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"bikes.schemas.InputsSchema.temp": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.TargetsSchema": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.splitters.TimeSeriesSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bikes.configs.to_object": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.OutputsSchema": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Reader.read": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.schemas.InputsSchema.registered": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}}, "df": 4}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}}, "df": 2, "r": {"docs": {"bikes.datasets.Writer": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.InputsSchema.weekday": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.InputsSchema.weathersit": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.InputsSchema.workingday": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.schemas.InputsSchema.windspeed": {"tf": 1}}, "df": 1}}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"bikes.jobs.Job": {"tf": 1}, "bikes.jobs.Job.run": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"bikes.jobs.InferenceJob": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.InferSigner": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 6}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.InputsSchema": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}}, "df": 19}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}}, "df": 3}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.Model.get_params": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.Loader": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.LoggerService": {"tf": 1}, "bikes.services.LoggerService.start": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.InputsSchema.dteday": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "r": {"docs": {"bikes.schemas.InputsSchema.yr": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "r": {"docs": {"bikes.schemas.InputsSchema.hr": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.InputsSchema.holiday": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"bikes.schemas.InputsSchema.hum": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"bikes.schemas.InputsSchema.atemp": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 3}}}, "fullname": {"root": {"docs": {"bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 5, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes": {"tf": 1}, "bikes.configs": {"tf": 1}, "bikes.configs.parse_file": {"tf": 1}, "bikes.configs.parse_string": {"tf": 1}, "bikes.configs.merge_configs": {"tf": 1}, "bikes.configs.to_object": {"tf": 1}, "bikes.datasets": {"tf": 1}, "bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.jobs": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}, "bikes.metrics": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.models": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.models.Model.set_params": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.registers": {"tf": 1}, "bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}, "bikes.schemas": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.Schema.Config": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1}, "bikes.schemas.InputsSchema": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}, "bikes.scripts": {"tf": 1}, "bikes.scripts.Settings": {"tf": 1}, "bikes.scripts.main": {"tf": 1}, "bikes.searchers": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.services": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.services.Service.start": {"tf": 1}, "bikes.services.Service.stop": {"tf": 1}, "bikes.services.LoggerService": {"tf": 1}, "bikes.services.LoggerService.start": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1}, "bikes.services.MLflowService.start": {"tf": 1}, "bikes.services.MLflowService.client": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}, "bikes.splitters": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 118}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"bikes.schemas.Schema.Config": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 4, "s": {"docs": {"bikes.configs": {"tf": 1}, "bikes.configs.parse_file": {"tf": 1}, "bikes.configs.parse_string": {"tf": 1}, "bikes.configs.merge_configs": {"tf": 1.4142135623730951}, "bikes.configs.to_object": {"tf": 1}}, "df": 5}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.CustomLoader": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}}, "df": 2}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"bikes.schemas.Schema.check": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bikes.schemas.InputsSchema.casual": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.TargetsSchema.cnt": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bikes.services.MLflowService.client": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bikes.configs.parse_file": {"tf": 1}, "bikes.configs.parse_string": {"tf": 1}}, "df": 2}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.datasets.ParquetWriter": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}}, "df": 2}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"bikes.models.Model.get_params": {"tf": 1}, "bikes.models.Model.set_params": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.configs.parse_file": {"tf": 1}}, "df": 1}}, "t": {"docs": {"bikes.models.Model.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.configs.parse_string": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bikes.services.Service.start": {"tf": 1}, "bikes.services.LoggerService.start": {"tf": 1}, "bikes.services.MLflowService.start": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"bikes.services.Service.stop": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}}, "df": 2, "r": {"docs": {"bikes.metrics.Metric.scorer": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.Schema.Config": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1}}, "df": 4, "s": {"docs": {"bikes.schemas": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.Schema.Config": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1}, "bikes.schemas.InputsSchema": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 34}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bikes.scripts": {"tf": 1}, "bikes.scripts.Settings": {"tf": 1}, "bikes.scripts.main": {"tf": 1}}, "df": 3}}}}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.Model.set_params": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bikes.scripts.Settings": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.schemas.InputsSchema.season": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.searchers.Searcher": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}}, "df": 2, "s": {"docs": {"bikes.searchers": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 5}}}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.Service": {"tf": 1}, "bikes.services.Service.start": {"tf": 1}, "bikes.services.Service.stop": {"tf": 1}}, "df": 3, "s": {"docs": {"bikes.services": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.services.Service.start": {"tf": 1}, "bikes.services.Service.stop": {"tf": 1}, "bikes.services.LoggerService": {"tf": 1}, "bikes.services.LoggerService.start": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1}, "bikes.services.MLflowService.start": {"tf": 1}, "bikes.services.MLflowService.client": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}}, "df": 10}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.Signer": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}}, "df": 2, "r": {"docs": {"bikes.registers.Saver": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.splitters.Splitter": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}}, "df": 3, "s": {"docs": {"bikes.splitters": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 10}}}}, "s": {"docs": {"bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bikes.configs.merge_configs": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bikes.metrics.Metric": {"tf": 1}, "bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}}, "df": 3, "s": {"docs": {"bikes.metrics": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}}, "df": 6}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.models.Model": {"tf": 1}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.models.Model.set_params": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 6, "s": {"docs": {"bikes.models": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.models.Model.set_params": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 10}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"bikes.schemas.InputsSchema.mnth": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bikes.scripts.main": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.MLflowService": {"tf": 1}, "bikes.services.MLflowService.start": {"tf": 1}, "bikes.services.MLflowService.client": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"bikes.configs.to_object": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"bikes.schemas.InputsSchema.temp": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.TargetsSchema": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.splitters.TimeSeriesSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bikes.configs.to_object": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.OutputsSchema": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bikes.datasets": {"tf": 1}, "bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}}, "df": 9}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.InputsSchema.dteday": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Reader.read": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1, "s": {"docs": {"bikes.registers": {"tf": 1}, "bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}}, "df": 16}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.schemas.InputsSchema.registered": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}}, "df": 4}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}}, "df": 2, "r": {"docs": {"bikes.datasets.Writer": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.InputsSchema.weekday": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.InputsSchema.weathersit": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.InputsSchema.workingday": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.schemas.InputsSchema.windspeed": {"tf": 1}}, "df": 1}}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"bikes.jobs.Job": {"tf": 1}, "bikes.jobs.Job.run": {"tf": 1}}, "df": 2, "s": {"docs": {"bikes.jobs": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}}, "df": 9}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"bikes.jobs.InferenceJob": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.InferSigner": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 6}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.InputsSchema": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}}, "df": 19}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}}, "df": 3}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.Model.get_params": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.Loader": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.LoggerService": {"tf": 1}, "bikes.services.LoggerService.start": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "r": {"docs": {"bikes.schemas.InputsSchema.yr": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "r": {"docs": {"bikes.schemas.InputsSchema.hr": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.InputsSchema.holiday": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"bikes.schemas.InputsSchema.hum": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"bikes.schemas.InputsSchema.atemp": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 3}}}, "annotation": {"root": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 20, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 20}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 20}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 20}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"bikes.schemas.InputsSchema.dteday": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 20}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 7}, "docs": {}, "df": 0}, "8": {"docs": {"bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}}, "df": 6}, "docs": {}, "df": 0}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 17}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {"bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"docs": {"bikes.configs.parse_file": {"tf": 6.164414002968976}, "bikes.configs.parse_string": {"tf": 6.164414002968976}, "bikes.configs.merge_configs": {"tf": 8}, "bikes.configs.to_object": {"tf": 6.164414002968976}, "bikes.datasets.Reader.read": {"tf": 4.898979485566356}, "bikes.datasets.ParquetReader.read": {"tf": 4.898979485566356}, "bikes.datasets.Writer.write": {"tf": 5.656854249492381}, "bikes.datasets.ParquetWriter.write": {"tf": 5.656854249492381}, "bikes.jobs.Job.run": {"tf": 5.0990195135927845}, "bikes.jobs.TuningJob.run": {"tf": 5.0990195135927845}, "bikes.jobs.TrainingJob.run": {"tf": 5.0990195135927845}, "bikes.jobs.InferenceJob.run": {"tf": 5.0990195135927845}, "bikes.metrics.Metric.score": {"tf": 9}, "bikes.metrics.Metric.scorer": {"tf": 9.899494936611665}, "bikes.metrics.SklearnMetric.score": {"tf": 9}, "bikes.models.Model.get_params": {"tf": 6.324555320336759}, "bikes.models.Model.set_params": {"tf": 4.69041575982343}, "bikes.models.Model.fit": {"tf": 9}, "bikes.models.Model.predict": {"tf": 8.48528137423857}, "bikes.models.BaselineSklearnModel.fit": {"tf": 9.433981132056603}, "bikes.models.BaselineSklearnModel.predict": {"tf": 8.48528137423857}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 5.744562646538029}, "bikes.registers.CustomAdapter.__init__": {"tf": 4.47213595499958}, "bikes.registers.CustomAdapter.predict": {"tf": 9.643650760992955}, "bikes.registers.Signer.sign": {"tf": 9.643650760992955}, "bikes.registers.InferSigner.sign": {"tf": 9.643650760992955}, "bikes.registers.Saver.save": {"tf": 9.848857801796104}, "bikes.registers.CustomSaver.save": {"tf": 9.848857801796104}, "bikes.registers.Loader.load": {"tf": 4.47213595499958}, "bikes.registers.CustomLoader.load": {"tf": 5.656854249492381}, "bikes.schemas.Schema.__init__": {"tf": 4}, "bikes.schemas.Schema.check": {"tf": 6}, "bikes.schemas.InputsSchema.__init__": {"tf": 4}, "bikes.schemas.TargetsSchema.__init__": {"tf": 4}, "bikes.schemas.OutputsSchema.__init__": {"tf": 4}, "bikes.scripts.main": {"tf": 5.656854249492381}, "bikes.searchers.Searcher.search": {"tf": 14.317821063276353}, "bikes.searchers.GridCVSearcher.search": {"tf": 14.317821063276353}, "bikes.services.Service.start": {"tf": 3.4641016151377544}, "bikes.services.Service.stop": {"tf": 3.4641016151377544}, "bikes.services.LoggerService.start": {"tf": 3.4641016151377544}, "bikes.services.MLflowService.start": {"tf": 3.1622776601683795}, "bikes.services.MLflowService.client": {"tf": 4.898979485566356}, "bikes.services.MLflowService.register": {"tf": 7.483314773547883}, "bikes.splitters.Splitter.split": {"tf": 11.045361017187261}, "bikes.splitters.Splitter.get_n_splits": {"tf": 10.04987562112089}, "bikes.splitters.TrainTestSplitter.split": {"tf": 11.045361017187261}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 10.04987562112089}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 11.045361017187261}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 10.04987562112089}}, "df": 50, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"bikes.configs.parse_file": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.metrics.Metric.score": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.scorer": {"tf": 1.4142135623730951}, "bikes.metrics.SklearnMetric.score": {"tf": 1.4142135623730951}, "bikes.models.Model.fit": {"tf": 1.4142135623730951}, "bikes.models.Model.predict": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1.4142135623730951}, "bikes.registers.CustomAdapter.predict": {"tf": 1.4142135623730951}, "bikes.registers.Signer.sign": {"tf": 1.4142135623730951}, "bikes.registers.InferSigner.sign": {"tf": 1.4142135623730951}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1.7320508075688772}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.7320508075688772}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 25}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"bikes.metrics.Metric.score": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.scorer": {"tf": 1.4142135623730951}, "bikes.metrics.SklearnMetric.score": {"tf": 1.4142135623730951}, "bikes.models.Model.fit": {"tf": 1.4142135623730951}, "bikes.models.Model.predict": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1.4142135623730951}, "bikes.registers.CustomAdapter.predict": {"tf": 1.4142135623730951}, "bikes.registers.Signer.sign": {"tf": 1.4142135623730951}, "bikes.registers.InferSigner.sign": {"tf": 1.4142135623730951}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 20}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"bikes.models.Model.set_params": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.registers.CustomLoader.load": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"bikes.registers.CustomAdapter.predict": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"bikes.configs.parse_file": {"tf": 1}, "bikes.configs.parse_string": {"tf": 1}, "bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}, "bikes.scripts.main": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1.7320508075688772}}, "df": 13, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.configs.parse_string": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.configs.merge_configs": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}, "bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.models.Model.set_params": {"tf": 1.4142135623730951}, "bikes.models.Model.fit": {"tf": 1.4142135623730951}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.services.Service.start": {"tf": 1}, "bikes.services.Service.stop": {"tf": 1}, "bikes.services.LoggerService.start": {"tf": 1}, "bikes.services.MLflowService.start": {"tf": 1}, "bikes.services.MLflowService.client": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 39}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"bikes.metrics.Metric.score": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.scorer": {"tf": 1.4142135623730951}, "bikes.metrics.SklearnMetric.score": {"tf": 1.4142135623730951}, "bikes.models.Model.fit": {"tf": 1.4142135623730951}, "bikes.models.Model.predict": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1.4142135623730951}, "bikes.registers.CustomAdapter.predict": {"tf": 1.4142135623730951}, "bikes.registers.Signer.sign": {"tf": 1.4142135623730951}, "bikes.registers.InferSigner.sign": {"tf": 1.4142135623730951}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 20}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1.4142135623730951}, "bikes.registers.CustomSaver.save": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2, "s": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"bikes.configs.parse_file": {"tf": 1.4142135623730951}, "bikes.configs.parse_string": {"tf": 1.4142135623730951}, "bikes.configs.merge_configs": {"tf": 2}, "bikes.configs.to_object": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bikes.configs.to_object": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}}, "df": 7}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bikes.scripts.main": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 7, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"bikes.configs.parse_file": {"tf": 1.4142135623730951}, "bikes.configs.parse_string": {"tf": 1.4142135623730951}, "bikes.configs.merge_configs": {"tf": 2}, "bikes.configs.to_object": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 7, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"bikes.configs.parse_file": {"tf": 1.4142135623730951}, "bikes.configs.parse_string": {"tf": 1.4142135623730951}, "bikes.configs.merge_configs": {"tf": 2}, "bikes.configs.to_object": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.metrics.Metric.score": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.scorer": {"tf": 1.4142135623730951}, "bikes.metrics.SklearnMetric.score": {"tf": 1.4142135623730951}, "bikes.models.Model.fit": {"tf": 1.4142135623730951}, "bikes.models.Model.predict": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1.4142135623730951}, "bikes.registers.CustomAdapter.predict": {"tf": 1.4142135623730951}, "bikes.registers.Signer.sign": {"tf": 1.4142135623730951}, "bikes.registers.InferSigner.sign": {"tf": 1.4142135623730951}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1.7320508075688772}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.7320508075688772}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 25}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"bikes.models.Model.get_params": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"bikes.configs.to_object": {"tf": 1}}, "df": 1, "s": {"docs": {"bikes.configs.merge_configs": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 7}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema.check": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bikes.services.MLflowService.client": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 7}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 5}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.scripts.main": {"tf": 1.4142135623730951}, "bikes.services.Service.start": {"tf": 1}, "bikes.services.Service.stop": {"tf": 1}, "bikes.services.LoggerService.start": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 13}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}}, "df": 5}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}, "bikes.metrics.Metric.score": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.scorer": {"tf": 1.4142135623730951}, "bikes.metrics.SklearnMetric.score": {"tf": 1.4142135623730951}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1.4142135623730951}, "bikes.models.Model.predict": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1.4142135623730951}, "bikes.registers.CustomAdapter.predict": {"tf": 1.4142135623730951}, "bikes.registers.Signer.sign": {"tf": 1.4142135623730951}, "bikes.registers.InferSigner.sign": {"tf": 1.4142135623730951}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1.7320508075688772}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.7320508075688772}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 25}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 13, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 13}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.Model.get_params": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.services.MLflowService.client": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.models.Model.set_params": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 10}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}, "v": {"docs": {"bikes.scripts.main": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.metrics.Metric.score": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.scorer": {"tf": 1.7320508075688772}, "bikes.metrics.SklearnMetric.score": {"tf": 1.4142135623730951}, "bikes.models.Model.fit": {"tf": 1.4142135623730951}, "bikes.models.Model.predict": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1.7320508075688772}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1.4142135623730951}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1.4142135623730951}, "bikes.registers.Signer.sign": {"tf": 1.4142135623730951}, "bikes.registers.InferSigner.sign": {"tf": 1.4142135623730951}, "bikes.registers.Saver.save": {"tf": 1.4142135623730951}, "bikes.registers.CustomSaver.save": {"tf": 1.4142135623730951}, "bikes.searchers.Searcher.search": {"tf": 2.23606797749979}, "bikes.searchers.GridCVSearcher.search": {"tf": 2.23606797749979}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 21}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"bikes.models.Model.get_params": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.models.BaselineSklearnModel.fit": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.metrics.Metric.scorer": {"tf": 1.4142135623730951}, "bikes.registers.CustomAdapter.__init__": {"tf": 1.4142135623730951}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1.7320508075688772}, "bikes.registers.CustomSaver.save": {"tf": 1.7320508075688772}, "bikes.registers.CustomLoader.load": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.4142135623730951}, "bikes.services.MLflowService.register": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1.7320508075688772}, "bikes.registers.CustomSaver.save": {"tf": 1.7320508075688772}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}}, "df": 4}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1.4142135623730951}, "bikes.registers.CustomSaver.save": {"tf": 1.4142135623730951}, "bikes.registers.CustomLoader.load": {"tf": 1}, "bikes.services.MLflowService.client": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}}, "df": 8, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bikes.services.MLflowService.client": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}}, "df": 2, "s": {"docs": {"bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 16, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 18}}}}}}}}}}, "t": {"docs": {"bikes.scripts.main": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}}, "df": 5}}}}}}}, "d": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 5}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 6}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"bikes.datasets.Reader": {"tf": 1.4142135623730951}, "bikes.datasets.Writer": {"tf": 1.4142135623730951}, "bikes.jobs.Job": {"tf": 1.4142135623730951}, "bikes.metrics.Metric": {"tf": 1.4142135623730951}, "bikes.models.Model": {"tf": 1.4142135623730951}, "bikes.registers.Signer": {"tf": 1.4142135623730951}, "bikes.registers.Saver": {"tf": 1.4142135623730951}, "bikes.registers.Loader": {"tf": 1.4142135623730951}, "bikes.searchers.Searcher": {"tf": 1.4142135623730951}, "bikes.services.Service": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter": {"tf": 1.4142135623730951}}, "df": 11}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.scripts.Settings": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}}, "df": 12}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"bikes.registers.CustomAdapter": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.registers.CustomAdapter": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.scripts.Settings": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}}, "df": 12}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bikes.metrics.SklearnMetric": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.registers.CustomAdapter": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 6}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"bikes.registers.CustomAdapter": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}}, "df": 11}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bikes.scripts.Settings": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.datasets.ParquetReader": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.datasets.ParquetWriter": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.InferSigner": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.CustomSaver": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.InputsSchema": {"tf": 1}, "bikes.schemas.TargetsSchema": {"tf": 1}, "bikes.schemas.OutputsSchema": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bikes.scripts.Settings": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.LoggerService": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.CustomLoader": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.schemas.Schema": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 3}}}}}}}}, "doc": {"root": {"0": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 3.872983346207417}, "bikes.schemas.InputsSchema.__init__": {"tf": 3.872983346207417}, "bikes.schemas.InputsSchema.instant": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.dteday": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.season": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.yr": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.mnth": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.hr": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.holiday": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.weekday": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.workingday": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.temp": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.atemp": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.hum": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.casual": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.registered": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.Config": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 3.872983346207417}, "bikes.schemas.TargetsSchema.instant": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.Config": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 3.872983346207417}, "bikes.schemas.OutputsSchema.instant": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.Config": {"tf": 1.4142135623730951}}, "df": 27}, "1": {"0": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}, "docs": {"bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}}, "df": 4}, "2": {"3": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}, "3": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}, "4": {"0": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}, "docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "5": {"2": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 27}, "7": {"6": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}, "8": {"0": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}, "docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}, "docs": {"bikes": {"tf": 1.7320508075688772}, "bikes.configs": {"tf": 1.7320508075688772}, "bikes.configs.parse_file": {"tf": 4.898979485566356}, "bikes.configs.parse_string": {"tf": 4.898979485566356}, "bikes.configs.merge_configs": {"tf": 4.898979485566356}, "bikes.configs.to_object": {"tf": 4.898979485566356}, "bikes.datasets": {"tf": 1.7320508075688772}, "bikes.datasets.Reader": {"tf": 4.242640687119285}, "bikes.datasets.Reader.read": {"tf": 3.4641016151377544}, "bikes.datasets.ParquetReader": {"tf": 3.872983346207417}, "bikes.datasets.ParquetReader.read": {"tf": 3.4641016151377544}, "bikes.datasets.Writer": {"tf": 2.449489742783178}, "bikes.datasets.Writer.write": {"tf": 3.872983346207417}, "bikes.datasets.ParquetWriter": {"tf": 3.872983346207417}, "bikes.datasets.ParquetWriter.write": {"tf": 3.872983346207417}, "bikes.jobs": {"tf": 1.7320508075688772}, "bikes.jobs.Job": {"tf": 4.795831523312719}, "bikes.jobs.Job.run": {"tf": 3.4641016151377544}, "bikes.jobs.TuningJob": {"tf": 7.54983443527075}, "bikes.jobs.TuningJob.run": {"tf": 3.4641016151377544}, "bikes.jobs.TrainingJob": {"tf": 7.937253933193772}, "bikes.jobs.TrainingJob.run": {"tf": 3.4641016151377544}, "bikes.jobs.InferenceJob": {"tf": 5.744562646538029}, "bikes.jobs.InferenceJob.run": {"tf": 3.4641016151377544}, "bikes.metrics": {"tf": 1.7320508075688772}, "bikes.metrics.Metric": {"tf": 4.242640687119285}, "bikes.metrics.Metric.score": {"tf": 5.477225575051661}, "bikes.metrics.Metric.scorer": {"tf": 6}, "bikes.metrics.SklearnMetric": {"tf": 4.58257569495584}, "bikes.metrics.SklearnMetric.score": {"tf": 5.477225575051661}, "bikes.models": {"tf": 1.7320508075688772}, "bikes.models.Model": {"tf": 2.449489742783178}, "bikes.models.Model.get_params": {"tf": 4.898979485566356}, "bikes.models.Model.set_params": {"tf": 3.4641016151377544}, "bikes.models.Model.fit": {"tf": 5.477225575051661}, "bikes.models.Model.predict": {"tf": 4.898979485566356}, "bikes.models.BaselineSklearnModel": {"tf": 5.196152422706632}, "bikes.models.BaselineSklearnModel.fit": {"tf": 5.477225575051661}, "bikes.models.BaselineSklearnModel.predict": {"tf": 4.898979485566356}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 4.795831523312719}, "bikes.registers": {"tf": 1.7320508075688772}, "bikes.registers.CustomAdapter": {"tf": 2.6457513110645907}, "bikes.registers.CustomAdapter.__init__": {"tf": 3.872983346207417}, "bikes.registers.CustomAdapter.predict": {"tf": 5.477225575051661}, "bikes.registers.Signer": {"tf": 2.6457513110645907}, "bikes.registers.Signer.sign": {"tf": 5.477225575051661}, "bikes.registers.InferSigner": {"tf": 1.7320508075688772}, "bikes.registers.InferSigner.sign": {"tf": 5.477225575051661}, "bikes.registers.Saver": {"tf": 4.242640687119285}, "bikes.registers.Saver.save": {"tf": 6}, "bikes.registers.CustomSaver": {"tf": 2.6457513110645907}, "bikes.registers.CustomSaver.save": {"tf": 1.7320508075688772}, "bikes.registers.Loader": {"tf": 2.449489742783178}, "bikes.registers.Loader.load": {"tf": 4.898979485566356}, "bikes.registers.CustomLoader": {"tf": 2.6457513110645907}, "bikes.registers.CustomLoader.load": {"tf": 4.898979485566356}, "bikes.schemas": {"tf": 1.7320508075688772}, "bikes.schemas.Schema": {"tf": 2.449489742783178}, "bikes.schemas.Schema.__init__": {"tf": 23.345235059857504}, "bikes.schemas.Schema.Config": {"tf": 4.58257569495584}, "bikes.schemas.Schema.check": {"tf": 5.385164807134504}, "bikes.schemas.InputsSchema": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 23.345235059857504}, "bikes.schemas.InputsSchema.instant": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.dteday": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.season": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.yr": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.mnth": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.hr": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.holiday": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.weekday": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.workingday": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.weathersit": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.temp": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.atemp": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.hum": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.windspeed": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.casual": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.registered": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.Config": {"tf": 2.6457513110645907}, "bikes.schemas.TargetsSchema": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 23.345235059857504}, "bikes.schemas.TargetsSchema.instant": {"tf": 2.6457513110645907}, "bikes.schemas.TargetsSchema.cnt": {"tf": 2.6457513110645907}, "bikes.schemas.TargetsSchema.Config": {"tf": 2.6457513110645907}, "bikes.schemas.OutputsSchema": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 23.345235059857504}, "bikes.schemas.OutputsSchema.instant": {"tf": 2.6457513110645907}, "bikes.schemas.OutputsSchema.prediction": {"tf": 2.6457513110645907}, "bikes.schemas.OutputsSchema.Config": {"tf": 2.6457513110645907}, "bikes.scripts": {"tf": 1.7320508075688772}, "bikes.scripts.Settings": {"tf": 3.872983346207417}, "bikes.scripts.main": {"tf": 5}, "bikes.searchers": {"tf": 1.7320508075688772}, "bikes.searchers.Searcher": {"tf": 2.449489742783178}, "bikes.searchers.Searcher.search": {"tf": 6.928203230275509}, "bikes.searchers.GridCVSearcher": {"tf": 6.855654600401044}, "bikes.searchers.GridCVSearcher.search": {"tf": 6.928203230275509}, "bikes.services": {"tf": 1.7320508075688772}, "bikes.services.Service": {"tf": 2.449489742783178}, "bikes.services.Service.start": {"tf": 1.7320508075688772}, "bikes.services.Service.stop": {"tf": 1.7320508075688772}, "bikes.services.LoggerService": {"tf": 7.810249675906654}, "bikes.services.LoggerService.start": {"tf": 1.7320508075688772}, "bikes.services.MLflowService": {"tf": 9}, "bikes.services.MLflowService.start": {"tf": 1.7320508075688772}, "bikes.services.MLflowService.client": {"tf": 1.7320508075688772}, "bikes.services.MLflowService.register": {"tf": 6}, "bikes.splitters": {"tf": 1.7320508075688772}, "bikes.splitters.Splitter": {"tf": 2.449489742783178}, "bikes.splitters.Splitter.split": {"tf": 6.082762530298219}, "bikes.splitters.Splitter.get_n_splits": {"tf": 6.082762530298219}, "bikes.splitters.TrainTestSplitter": {"tf": 5.291502622129181}, "bikes.splitters.TrainTestSplitter.split": {"tf": 6.082762530298219}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 6.082762530298219}, "bikes.splitters.TimeSeriesSplitter": {"tf": 5.291502622129181}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 6.082762530298219}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 6.082762530298219}}, "df": 118, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bikes": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.models.Model.predict": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"bikes.jobs.InferenceJob": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.metrics.Metric": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bikes.jobs": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.schemas.InputsSchema": {"tf": 1}, "bikes.schemas.TargetsSchema": {"tf": 1}, "bikes.schemas.OutputsSchema": {"tf": 1}}, "df": 5}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 2}, "bikes.schemas.InputsSchema.__init__": {"tf": 2}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2}}, "df": 4}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"bikes.scripts": {"tf": 1}, "bikes.scripts.Settings": {"tf": 1}, "bikes.scripts.main": {"tf": 1.7320508075688772}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.__init__": {"tf": 2.6457513110645907}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2.6457513110645907}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2.6457513110645907}}, "df": 4, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bikes.configs": {"tf": 1}, "bikes.configs.parse_file": {"tf": 1}, "bikes.configs.parse_string": {"tf": 1}}, "df": 3}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetWriter": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"bikes.models.Model.get_params": {"tf": 1.4142135623730951}, "bikes.models.Model.set_params": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"bikes.models.Model.get_params": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 5}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"bikes.configs.parse_file": {"tf": 1.7320508075688772}, "bikes.datasets.ParquetReader": {"tf": 1.4142135623730951}, "bikes.datasets.ParquetWriter": {"tf": 1}, "bikes.registers.Saver": {"tf": 1.4142135623730951}, "bikes.services.MLflowService.register": {"tf": 1.4142135623730951}}, "df": 5}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.configs.to_object": {"tf": 1.4142135623730951}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"bikes.registers.CustomAdapter.predict": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"bikes.registers.CustomAdapter": {"tf": 1.4142135623730951}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1.4142135623730951}, "bikes.registers.CustomLoader": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "d": {"docs": {"bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.Schema.check": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}}, "df": 9}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.metrics": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}}, "df": 2}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.Model.set_params": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.schemas.Schema.Config": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"bikes.models.Model.set_params": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}}, "df": 3, "h": {"docs": {}, "df": 0, "e": {"docs": {"bikes": {"tf": 1}, "bikes.configs.parse_file": {"tf": 1}, "bikes.configs.parse_string": {"tf": 1.4142135623730951}, "bikes.configs.merge_configs": {"tf": 1}, "bikes.configs.to_object": {"tf": 1.4142135623730951}, "bikes.jobs": {"tf": 1}, "bikes.jobs.Job": {"tf": 1.4142135623730951}, "bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob": {"tf": 1.4142135623730951}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 2}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1.7320508075688772}, "bikes.jobs.InferenceJob.run": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.metrics.Metric.score": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.scorer": {"tf": 1.4142135623730951}, "bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1.4142135623730951}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.models.Model.set_params": {"tf": 1.4142135623730951}, "bikes.models.Model.fit": {"tf": 1.7320508075688772}, "bikes.models.Model.predict": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel": {"tf": 1.7320508075688772}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1.7320508075688772}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1.4142135623730951}, "bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1.4142135623730951}, "bikes.registers.Signer.sign": {"tf": 1.7320508075688772}, "bikes.registers.InferSigner.sign": {"tf": 1.7320508075688772}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1.4142135623730951}, "bikes.registers.CustomLoader": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1.4142135623730951}, "bikes.schemas.Schema.__init__": {"tf": 3.3166247903554}, "bikes.schemas.Schema.Config": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1}, "bikes.schemas.InputsSchema": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 3.3166247903554}, "bikes.schemas.TargetsSchema": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 3.3166247903554}, "bikes.schemas.OutputsSchema": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 3.3166247903554}, "bikes.scripts": {"tf": 1}, "bikes.scripts.Settings": {"tf": 1}, "bikes.scripts.main": {"tf": 1.4142135623730951}, "bikes.searchers": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 2}, "bikes.searchers.GridCVSearcher": {"tf": 1.7320508075688772}, "bikes.searchers.GridCVSearcher.search": {"tf": 2}, "bikes.services.Service.start": {"tf": 1}, "bikes.services.Service.stop": {"tf": 1}, "bikes.services.LoggerService.start": {"tf": 1}, "bikes.services.MLflowService": {"tf": 2.8284271247461903}, "bikes.services.MLflowService.start": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 69}, "i": {"docs": {}, "df": 0, "s": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 5}}}, "o": {"docs": {"bikes.configs.to_object": {"tf": 1.4142135623730951}, "bikes.datasets.Reader": {"tf": 1.7320508075688772}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1.4142135623730951}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter": {"tf": 1.4142135623730951}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.jobs.Job": {"tf": 1.4142135623730951}, "bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.models.Model": {"tf": 1.4142135623730951}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1.4142135623730951}, "bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1.4142135623730951}, "bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.Schema.check": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.scripts.main": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1.4142135623730951}, "bikes.searchers.Searcher.search": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.4142135623730951}, "bikes.services.Service": {"tf": 1}, "bikes.services.LoggerService": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 47, "p": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.TargetsSchema": {"tf": 1}}, "df": 1, "s": {"docs": {"bikes.jobs.TuningJob": {"tf": 1.4142135623730951}, "bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.score": {"tf": 1.7320508075688772}, "bikes.metrics.Metric.scorer": {"tf": 1.7320508075688772}, "bikes.metrics.SklearnMetric.score": {"tf": 1.7320508075688772}, "bikes.models.Model.fit": {"tf": 2}, "bikes.models.BaselineSklearnModel.fit": {"tf": 2}, "bikes.searchers.Searcher.search": {"tf": 2}, "bikes.searchers.GridCVSearcher.search": {"tf": 2}, "bikes.splitters.Splitter.split": {"tf": 1.7320508075688772}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.7320508075688772}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.7320508075688772}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.7320508075688772}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.7320508075688772}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.7320508075688772}}, "df": 15}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1.7320508075688772}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.models.Model.fit": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1.4142135623730951}}, "df": 2}}}, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bikes.splitters": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bikes.splitters.Splitter": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.services.MLflowService": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.Model.get_params": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.services.MLflowService": {"tf": 2.449489742783178}}, "df": 6}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.Schema.Config": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bikes.splitters.TrainTestSplitter": {"tf": 1.7320508075688772}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 7, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes": {"tf": 1}, "bikes.datasets.Reader": {"tf": 1}, "bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bikes.jobs.TuningJob": {"tf": 1.4142135623730951}, "bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.metrics.Metric": {"tf": 1.4142135623730951}, "bikes.metrics.SklearnMetric": {"tf": 1.4142135623730951}, "bikes.services.MLflowService": {"tf": 2}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 23}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bikes.scripts.main": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 7}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.searchers.Searcher": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"bikes": {"tf": 1}, "bikes.configs.parse_file": {"tf": 1}, "bikes.configs.parse_string": {"tf": 1}, "bikes.configs.merge_configs": {"tf": 1.7320508075688772}, "bikes.configs.to_object": {"tf": 1.4142135623730951}, "bikes.datasets.Reader": {"tf": 1}, "bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.jobs.InferenceJob": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.models.Model.set_params": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel": {"tf": 2}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1.4142135623730951}, "bikes.registers.InferSigner.sign": {"tf": 1.4142135623730951}, "bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 2}, "bikes.schemas.InputsSchema.__init__": {"tf": 2}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2}, "bikes.scripts.main": {"tf": 1.4142135623730951}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1.7320508075688772}, "bikes.services.MLflowService.client": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 35}, "r": {"docs": {"bikes.configs.parse_file": {"tf": 1}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetWriter": {"tf": 1}, "bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 2}, "bikes.schemas.InputsSchema.__init__": {"tf": 2}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 11, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"bikes.registers.Signer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bikes.configs.to_object": {"tf": 2}, "bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1}}, "df": 8, "s": {"docs": {"bikes.configs.merge_configs": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "n": {"docs": {"bikes.models.Model.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 4, "e": {"docs": {"bikes.configs.merge_configs": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 6}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.scripts.main": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 11}}, "s": {"docs": {"bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 3}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.OutputsSchema": {"tf": 1}, "bikes.services.LoggerService": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"bikes.jobs.InferenceJob": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.score": {"tf": 1.7320508075688772}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1.7320508075688772}, "bikes.models.Model.predict": {"tf": 1.7320508075688772}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1.7320508075688772}, "bikes.registers.CustomAdapter.predict": {"tf": 1.4142135623730951}, "bikes.registers.Signer.sign": {"tf": 1.4142135623730951}, "bikes.registers.InferSigner.sign": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}}, "df": 12, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "t": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.searchers": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.metrics.SklearnMetric": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"bikes.registers.Signer": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 5}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bikes.splitters.TrainTestSplitter": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.schemas.Schema.Config": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher": {"tf": 1.4142135623730951}, "bikes.services.LoggerService": {"tf": 2.23606797749979}, "bikes.services.MLflowService": {"tf": 2.8284271247461903}, "bikes.splitters.TrainTestSplitter": {"tf": 1}}, "df": 7}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {"bikes.configs.parse_file": {"tf": 1.4142135623730951}, "bikes.configs.merge_configs": {"tf": 1}, "bikes.configs.to_object": {"tf": 1.7320508075688772}, "bikes.datasets.Reader": {"tf": 1.7320508075688772}, "bikes.datasets.Reader.read": {"tf": 1.4142135623730951}, "bikes.datasets.ParquetReader": {"tf": 1.7320508075688772}, "bikes.datasets.ParquetReader.read": {"tf": 1.4142135623730951}, "bikes.datasets.Writer": {"tf": 1.7320508075688772}, "bikes.datasets.Writer.write": {"tf": 1.4142135623730951}, "bikes.datasets.ParquetWriter": {"tf": 1.7320508075688772}, "bikes.datasets.ParquetWriter.write": {"tf": 1.4142135623730951}, "bikes.jobs.Job": {"tf": 1.4142135623730951}, "bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.models.Model": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1.4142135623730951}, "bikes.schemas.Schema.__init__": {"tf": 2.449489742783178}, "bikes.schemas.InputsSchema.__init__": {"tf": 2.449489742783178}, "bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2.449489742783178}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2.449489742783178}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}, "bikes.searchers": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}}, "df": 61, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.services.MLflowService.client": {"tf": 1}}, "df": 2, "d": {"docs": {"bikes.configs": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.registers": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.schemas": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1}}, "df": 17}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.models.Model": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 5, "s": {"docs": {"bikes.configs.parse_file": {"tf": 1}, "bikes.configs.parse_string": {"tf": 1}, "bikes.configs.merge_configs": {"tf": 1}, "bikes.configs.to_object": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}, "bikes.schemas.Schema.check": {"tf": 1.4142135623730951}, "bikes.scripts.main": {"tf": 1.4142135623730951}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 33}}}}}}, "v": {"docs": {"bikes.scripts.main": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bikes.registers.Saver": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 2}, "bikes.schemas.InputsSchema.__init__": {"tf": 2}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2}}, "df": 4}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetWriter": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.schemas.Schema.Config": {"tf": 1}, "bikes.scripts.Settings": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.services.LoggerService": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 19}}}}}}}}}, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.jobs.InferenceJob": {"tf": 1.4142135623730951}, "bikes.services.MLflowService.register": {"tf": 1.4142135623730951}}, "df": 3}}}, "l": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1}}, "df": 7, "o": {"docs": {}, "df": 0, "w": {"docs": {"bikes.registers.Signer": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1}, "bikes.models.Model": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"bikes.metrics.Metric": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 7}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.Model": {"tf": 1}, "bikes.registers.CustomAdapter": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.CustomAdapter.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"bikes.registers": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bikes.schemas.Schema.check": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 2}, "bikes.schemas.InputsSchema.__init__": {"tf": 2}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2}}, "df": 5, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.scripts.Settings": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.registers.Signer": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bikes.registers.Signer": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"bikes.services.MLflowService": {"tf": 2.8284271247461903}}, "df": 1, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.services.MLflowService": {"tf": 2.8284271247461903}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 20}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bikes.configs": {"tf": 1}, "bikes.configs.merge_configs": {"tf": 1}}, "df": 2, "d": {"docs": {"bikes.configs.merge_configs": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bikes.jobs.TuningJob": {"tf": 1.4142135623730951}, "bikes.metrics.Metric": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1.7320508075688772}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.metrics": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 7}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4, "t": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.models.BaselineSklearnModel": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bikes.metrics.SklearnMetric": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bikes.jobs.Job": {"tf": 1.4142135623730951}, "bikes.services": {"tf": 1}, "bikes.services.Service": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bikes.registers.Signer": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.models": {"tf": 1}, "bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.scripts.main": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 4}}, "e": {"docs": {"bikes.metrics.Metric": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.registers.Signer": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}}, "df": 2}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"bikes.jobs.Job": {"tf": 1.4142135623730951}, "bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.services.MLflowService": {"tf": 2}, "bikes.services.MLflowService.start": {"tf": 1}, "bikes.services.MLflowService.client": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1.7320508075688772}}, "df": 14, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.jobs.Job": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.jobs.TuningJob": {"tf": 1.7320508075688772}, "bikes.jobs.TrainingJob": {"tf": 2.449489742783178}, "bikes.jobs.InferenceJob": {"tf": 2}, "bikes.metrics": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 2.449489742783178}, "bikes.models.Model": {"tf": 1.7320508075688772}, "bikes.models.Model.get_params": {"tf": 1.4142135623730951}, "bikes.models.Model.set_params": {"tf": 1.4142135623730951}, "bikes.models.Model.fit": {"tf": 2.23606797749979}, "bikes.models.Model.predict": {"tf": 1.7320508075688772}, "bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 2.23606797749979}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1.7320508075688772}, "bikes.registers": {"tf": 1}, "bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1.7320508075688772}, "bikes.registers.CustomAdapter.predict": {"tf": 1.7320508075688772}, "bikes.registers.Signer.sign": {"tf": 2}, "bikes.registers.InferSigner": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 2}, "bikes.registers.Saver": {"tf": 1.4142135623730951}, "bikes.registers.Saver.save": {"tf": 2.6457513110645907}, "bikes.registers.CustomSaver.save": {"tf": 1.4142135623730951}, "bikes.registers.Loader": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 2}, "bikes.registers.CustomLoader.load": {"tf": 2}, "bikes.searchers": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 2.449489742783178}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 2.449489742783178}, "bikes.services.MLflowService": {"tf": 1.7320508075688772}, "bikes.services.MLflowService.register": {"tf": 1.7320508075688772}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 40, "s": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.models": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 17, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}}, "df": 2}}}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bikes.metrics.SklearnMetric": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bikes.configs": {"tf": 1}, "bikes.configs.to_object": {"tf": 1}, "bikes.schemas.Schema.Config": {"tf": 1}, "bikes.services.LoggerService": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.configs.to_object": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"bikes.configs.parse_file": {"tf": 1.7320508075688772}, "bikes.configs.parse_string": {"tf": 1.7320508075688772}, "bikes.configs.merge_configs": {"tf": 2}, "bikes.configs.to_object": {"tf": 2.23606797749979}}, "df": 4, "s": {"docs": {"bikes.configs": {"tf": 1}, "bikes.configs.merge_configs": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.configs.parse_string": {"tf": 1}, "bikes.schemas.Schema.Config": {"tf": 1}}, "df": 2}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"bikes.jobs.Job": {"tf": 1}, "bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1.7320508075688772}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.services": {"tf": 1}, "bikes.services.Service": {"tf": 1}}, "df": 9, "s": {"docs": {"bikes.services.Service": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.jobs.Job": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.schemas.Schema": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bikes.scripts": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.metrics.SklearnMetric": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.Schema.Config": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 2}, "bikes.schemas.InputsSchema.__init__": {"tf": 2}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2}}, "df": 4, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.LoggerService": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"bikes.schemas.Schema.Config": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"bikes.scripts.main": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}}, "df": 12}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bikes.services.Service": {"tf": 1}, "bikes.services.MLflowService.client": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 5}}}}}, "t": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}}, "df": 4, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 2.23606797749979}, "bikes.schemas.InputsSchema.__init__": {"tf": 2.23606797749979}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2.23606797749979}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2.23606797749979}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"bikes.services.LoggerService": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 20}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.CustomAdapter.__init__": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 10}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 2.449489742783178}, "bikes.schemas.Schema.check": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 2.449489742783178}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2.449489742783178}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2.449489742783178}}, "df": 5, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 3, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "v": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bikes.configs": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"bikes.schemas.Schema": {"tf": 1}}, "df": 1}}}}, "f": {"1": {"docs": {"bikes.metrics.Metric": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.configs.parse_file": {"tf": 1.4142135623730951}, "bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.datasets.ParquetWriter": {"tf": 1.4142135623730951}}, "df": 5}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.searchers": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}}, "df": 3}}, "t": {"docs": {"bikes.models.Model.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 20, "s": {"docs": {"bikes.schemas.Schema": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"bikes.configs.parse_file": {"tf": 1}, "bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1.4142135623730951}, "bikes.registers.Loader.load": {"tf": 1.4142135623730951}, "bikes.registers.CustomLoader.load": {"tf": 1.4142135623730951}}, "df": 15, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"bikes.datasets": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"bikes.models.Model": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.jobs": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.jobs.TuningJob": {"tf": 2}, "bikes.jobs.TrainingJob": {"tf": 1.7320508075688772}, "bikes.jobs.InferenceJob": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.registers": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}, "bikes.scripts": {"tf": 1}, "bikes.scripts.Settings": {"tf": 1}, "bikes.scripts.main": {"tf": 1}, "bikes.searchers": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 2}, "bikes.searchers.GridCVSearcher.search": {"tf": 2}, "bikes.services.Service": {"tf": 1}, "bikes.services.LoggerService": {"tf": 1}, "bikes.services.MLflowService": {"tf": 2.23606797749979}, "bikes.splitters.Splitter": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 41, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1.4142135623730951}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"bikes.services.LoggerService": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2, "s": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bikes.registers.CustomAdapter": {"tf": 1}}, "df": 1, "s": {"docs": {"bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.scripts.main": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 2.6457513110645907}, "bikes.schemas.InputsSchema.__init__": {"tf": 2.6457513110645907}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2.6457513110645907}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2.6457513110645907}}, "df": 5, "t": {"docs": {}, "df": 0, "r": {"docs": {"bikes.configs.parse_file": {"tf": 1}, "bikes.configs.parse_string": {"tf": 1}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetWriter": {"tf": 1}, "bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.jobs.InferenceJob": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.services.LoggerService": {"tf": 1.7320508075688772}, "bikes.services.MLflowService": {"tf": 2}, "bikes.services.MLflowService.register": {"tf": 1.7320508075688772}}, "df": 20, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.configs.parse_string": {"tf": 2}}, "df": 1}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.Schema.Config": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"bikes.registers.Saver": {"tf": 1}}, "df": 1}}, "p": {"docs": {"bikes.services.Service.stop": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1.4142135623730951}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1.4142135623730951}}, "df": 6}, "u": {"docs": {}, "df": 0, "s": {"docs": {"bikes.scripts.main": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"bikes.services.Service.start": {"tf": 1}, "bikes.services.LoggerService.start": {"tf": 1}, "bikes.services.MLflowService.start": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bikes.datasets": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Writer": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1.4142135623730951}, "bikes.registers.CustomSaver.save": {"tf": 1}}, "df": 4, "r": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1}}, "df": 2, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"bikes.registers": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.registers.Saver": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.Saver.save": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 2.23606797749979}, "bikes.schemas.InputsSchema.__init__": {"tf": 2.23606797749979}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2.23606797749979}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2.23606797749979}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.jobs.Job": {"tf": 1.4142135623730951}, "bikes.services.Service": {"tf": 1}, "bikes.services.Service.start": {"tf": 1}, "bikes.services.Service.stop": {"tf": 1}, "bikes.services.LoggerService": {"tf": 1}, "bikes.services.LoggerService.start": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1}, "bikes.services.MLflowService.start": {"tf": 1}}, "df": 8, "s": {"docs": {"bikes.jobs.Job": {"tf": 1.7320508075688772}, "bikes.services.Service": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.services.MLflowService": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.registers.Saver": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.jobs.TuningJob": {"tf": 1.7320508075688772}, "bikes.searchers.Searcher": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 3, "s": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {"bikes.models.Model.set_params": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bikes.scripts.Settings": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"bikes.models.Model.set_params": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {"bikes.scripts.main": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"bikes.jobs.Job": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bikes.splitters": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.jobs.TuningJob": {"tf": 1.4142135623730951}, "bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1}}, "df": 4, "s": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}}, "df": 3}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.splitters.TrainTestSplitter": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 7}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"bikes.services.Service": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}, "k": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}}, "df": 1, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"bikes.registers": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.Signer": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1.4142135623730951}, "bikes.registers.InferSigner.sign": {"tf": 1.4142135623730951}, "bikes.registers.Saver.save": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"bikes.registers.Signer": {"tf": 1.4142135623730951}, "bikes.registers.InferSigner": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.registers.Signer": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bikes.services.MLflowService": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1.4142135623730951}}, "df": 4, "r": {"docs": {}, "df": 0, "s": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1}}, "df": 1}}, "s": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.Schema": {"tf": 1.4142135623730951}, "bikes.schemas.Schema.__init__": {"tf": 2}, "bikes.schemas.Schema.check": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 2}, "bikes.schemas.TargetsSchema": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2}, "bikes.schemas.OutputsSchema": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2}}, "df": 9, "s": {"docs": {"bikes.metrics.Metric.score": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.scorer": {"tf": 1.4142135623730951}, "bikes.metrics.SklearnMetric.score": {"tf": 1.4142135623730951}, "bikes.models.Model.fit": {"tf": 1.4142135623730951}, "bikes.models.Model.predict": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1.4142135623730951}, "bikes.registers.CustomAdapter.predict": {"tf": 1.4142135623730951}, "bikes.registers.Signer.sign": {"tf": 1.4142135623730951}, "bikes.registers.InferSigner.sign": {"tf": 1.4142135623730951}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.schemas": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 20}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"bikes.metrics.SklearnMetric": {"tf": 1.4142135623730951}, "bikes.models.BaselineSklearnModel": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"bikes.models.Model": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bikes.registers.Signer": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.services.MLflowService": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bikes.splitters": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}}, "df": 7}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.splitters.TrainTestSplitter": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bikes.configs.parse_file": {"tf": 1}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetWriter": {"tf": 1}, "bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}}, "df": 7, "s": {"docs": {"bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1.7320508075688772}, "bikes.registers.Loader.load": {"tf": 1.4142135623730951}, "bikes.registers.CustomLoader.load": {"tf": 1.4142135623730951}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.jobs.InferenceJob": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}}, "df": 2, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bikes.jobs.InferenceJob": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"bikes.registers": {"tf": 1}}, "df": 1}}, "d": {"docs": {"bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.registers.Loader": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {"bikes.services.LoggerService": {"tf": 1}, "bikes.services.MLflowService": {"tf": 2.23606797749979}}, "df": 2, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.jobs.Job": {"tf": 1.4142135623730951}, "bikes.services.Service": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.jobs.Job": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.jobs.Job": {"tf": 1}, "bikes.services.LoggerService": {"tf": 2}, "bikes.services.MLflowService": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"bikes.services.MLflowService": {"tf": 1.7320508075688772}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bikes.configs.merge_configs": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 7, "[": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"bikes.configs.merge_configs": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"bikes.scripts.main": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bikes.datasets.Reader": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"bikes.jobs.Job": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"bikes.scripts": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.jobs": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.services.LoggerService": {"tf": 1.4142135623730951}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.models": {"tf": 1}, "bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 6}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}, "z": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}}, "df": 4}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.configs.parse_file": {"tf": 1}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetWriter": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1, "s": {"docs": {"bikes.configs.parse_file": {"tf": 1}, "bikes.configs.parse_string": {"tf": 1}, "bikes.configs.merge_configs": {"tf": 1}, "bikes.configs.to_object": {"tf": 1}, "bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}, "bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}, "bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}, "bikes.models.Model.get_params": {"tf": 1}, "bikes.models.Model.set_params": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1}, "bikes.registers.CustomLoader.load": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.Schema.check": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.scripts.main": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 40}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.configs.parse_file": {"tf": 1}, "bikes.configs.parse_string": {"tf": 1}, "bikes.configs.merge_configs": {"tf": 1}, "bikes.configs.to_object": {"tf": 1}, "bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}}, "df": 8}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"bikes.datasets.Reader": {"tf": 1.4142135623730951}, "bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.datasets.Reader": {"tf": 1.4142135623730951}, "bikes.jobs.TuningJob": {"tf": 1.4142135623730951}, "bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.jobs.InferenceJob": {"tf": 1}}, "df": 4, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bikes.jobs.TuningJob": {"tf": 1.4142135623730951}, "bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.jobs.InferenceJob": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}}, "df": 3, "s": {"docs": {"bikes.jobs.TuningJob": {"tf": 1.4142135623730951}, "bikes.searchers.Searcher.search": {"tf": 1.4142135623730951}, "bikes.searchers.GridCVSearcher.search": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1}}, "df": 2, "s": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.jobs.InferenceJob": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.jobs.InferenceJob": {"tf": 1.4142135623730951}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.registers.CustomSaver.save": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.registers.Loader.load": {"tf": 1.4142135623730951}, "bikes.registers.CustomLoader.load": {"tf": 1.4142135623730951}, "bikes.services.MLflowService": {"tf": 2.23606797749979}, "bikes.services.MLflowService.register": {"tf": 1.4142135623730951}}, "df": 10}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.registers": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bikes.metrics.Metric": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 2.449489742783178}, "bikes.schemas.InputsSchema.__init__": {"tf": 2.449489742783178}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2.449489742783178}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2.449489742783178}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob": {"tf": 1.4142135623730951}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}, "bikes.services.MLflowService.register": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"bikes.jobs.Job": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 2}, "bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.splitters.TrainTestSplitter": {"tf": 1.4142135623730951}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.splitters": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"bikes.configs.parse_string": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 1}, "bikes.searchers.GridCVSearcher.search": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.jobs.InferenceJob": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}, "bikes.registers.InferSigner": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 6, "d": {"docs": {"bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "t": {"docs": {"bikes.models.Model.get_params": {"tf": 1}, "bikes.services.MLflowService.client": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.metrics.SklearnMetric": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1.7320508075688772}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 6, "s": {"docs": {"bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 5.0990195135927845}, "bikes.schemas.InputsSchema.__init__": {"tf": 5.0990195135927845}, "bikes.schemas.TargetsSchema.__init__": {"tf": 5.0990195135927845}, "bikes.schemas.OutputsSchema.__init__": {"tf": 5.0990195135927845}}, "df": 4}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bikes.services": {"tf": 1}, "bikes.services.Service": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"bikes.splitters.TimeSeriesSplitter": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}, "bikes.models.Model.set_params": {"tf": 1}, "bikes.models.BaselineSklearnModel": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 39, "t": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.models.BaselineSklearnModel": {"tf": 1.7320508075688772}, "bikes.scripts.main": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1.7320508075688772}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 9, "o": {"docs": {"bikes.configs.merge_configs": {"tf": 1}, "bikes.splitters": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}}, "df": 7}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bikes.models.Model.get_params": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.scripts": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"bikes.registers.Signer": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"bikes.jobs.TuningJob": {"tf": 1.4142135623730951}, "bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.jobs.InferenceJob": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.scorer": {"tf": 1.7320508075688772}, "bikes.models.Model.fit": {"tf": 2}, "bikes.models.Model.predict": {"tf": 2}, "bikes.models.BaselineSklearnModel.fit": {"tf": 2}, "bikes.models.BaselineSklearnModel.predict": {"tf": 2}, "bikes.registers.CustomAdapter.predict": {"tf": 1.7320508075688772}, "bikes.registers.Signer.sign": {"tf": 1.7320508075688772}, "bikes.registers.InferSigner.sign": {"tf": 1.7320508075688772}, "bikes.registers.Saver.save": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema": {"tf": 1}, "bikes.searchers.Searcher.search": {"tf": 2}, "bikes.searchers.GridCVSearcher.search": {"tf": 2}, "bikes.splitters.Splitter.split": {"tf": 1.7320508075688772}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1.7320508075688772}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.7320508075688772}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1.7320508075688772}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.7320508075688772}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1.7320508075688772}}, "df": 21, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bikes.registers.Signer.sign": {"tf": 1}, "bikes.registers.InferSigner.sign": {"tf": 1}}, "df": 2}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.Model.set_params": {"tf": 1}, "bikes.models.Model.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.fit": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.services.MLflowService.client": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.Saver": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.CustomAdapter.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.Signer": {"tf": 1}, "bikes.registers.InferSigner": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {"bikes.registers.Saver.save": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.registers.Saver.save": {"tf": 1}, "bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 21}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.schemas.Schema.Config": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.models.Model.get_params": {"tf": 1}, "bikes.registers.CustomAdapter.predict": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"bikes.schemas.Schema": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}}, "df": 3}}}}}}}, "f": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.Schema.Config": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.services.MLflowService": {"tf": 2.449489742783178}}, "df": 6}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {"bikes.services.MLflowService.register": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.registers.InferSigner": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.Schema.Config": {"tf": 1.4142135623730951}, "bikes.schemas.Schema.check": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 9, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bikes.datasets.Reader": {"tf": 1.7320508075688772}, "bikes.datasets.Reader.read": {"tf": 1}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1.4142135623730951}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}, "bikes.jobs.TuningJob": {"tf": 1.7320508075688772}, "bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.jobs.InferenceJob": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}}, "df": 13, "s": {"docs": {"bikes.datasets": {"tf": 1}, "bikes.jobs.TuningJob": {"tf": 2}, "bikes.jobs.TrainingJob": {"tf": 1.7320508075688772}, "bikes.jobs.InferenceJob": {"tf": 1.4142135623730951}, "bikes.services.MLflowService": {"tf": 1.4142135623730951}, "bikes.splitters.Splitter": {"tf": 1}}, "df": 6}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Reader.read": {"tf": 1.7320508075688772}, "bikes.datasets.ParquetReader": {"tf": 1}, "bikes.datasets.ParquetReader.read": {"tf": 1.7320508075688772}, "bikes.datasets.Writer.write": {"tf": 1.7320508075688772}, "bikes.datasets.ParquetWriter": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1.7320508075688772}, "bikes.schemas": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1.4142135623730951}, "bikes.schemas.Schema.__init__": {"tf": 2.8284271247461903}, "bikes.schemas.Schema.check": {"tf": 2}, "bikes.schemas.InputsSchema.__init__": {"tf": 2.8284271247461903}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2.8284271247461903}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2.8284271247461903}, "bikes.splitters.Splitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TrainTestSplitter": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1.4142135623730951}, "bikes.splitters.TimeSeriesSplitter": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1.4142135623730951}}, "df": 18, "s": {"docs": {"bikes.splitters": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}, "e": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}}, "df": 4, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bikes.jobs.Job": {"tf": 1}, "bikes.models": {"tf": 1}, "bikes.schemas": {"tf": 1}, "bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.Schema.Config": {"tf": 1}}, "df": 1, "s": {"docs": {"bikes.models.Model.get_params": {"tf": 1}, "bikes.scripts.main": {"tf": 1}, "bikes.splitters.Splitter.split": {"tf": 1}, "bikes.splitters.Splitter.get_n_splits": {"tf": 1}, "bikes.splitters.TrainTestSplitter.split": {"tf": 1}, "bikes.splitters.TrainTestSplitter.get_n_splits": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.split": {"tf": 1}, "bikes.splitters.TimeSeriesSplitter.get_n_splits": {"tf": 1}}, "df": 8}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"bikes.models.Model.get_params": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.registers.Loader": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}}, "df": 4}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.services": {"tf": 1}, "bikes.services.LoggerService": {"tf": 1}, "bikes.services.MLflowService": {"tf": 2.23606797749979}}, "df": 3}}}}}, "f": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "o": {"docs": {}, "df": 0, "g": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 3.1622776601683795}, "bikes.schemas.InputsSchema.__init__": {"tf": 3.1622776601683795}, "bikes.schemas.TargetsSchema.__init__": {"tf": 3.1622776601683795}, "bikes.schemas.OutputsSchema.__init__": {"tf": 3.1622776601683795}}, "df": 4, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.MLflowService": {"tf": 2}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.registers.Saver": {"tf": 1}, "bikes.registers.Loader": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.splitters": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}}, "df": 13, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bikes.datasets": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"bikes.schemas.InputsSchema.instant": {"tf": 1}, "bikes.schemas.InputsSchema.dteday": {"tf": 1}, "bikes.schemas.InputsSchema.season": {"tf": 1}, "bikes.schemas.InputsSchema.yr": {"tf": 1}, "bikes.schemas.InputsSchema.mnth": {"tf": 1}, "bikes.schemas.InputsSchema.hr": {"tf": 1}, "bikes.schemas.InputsSchema.holiday": {"tf": 1}, "bikes.schemas.InputsSchema.weekday": {"tf": 1}, "bikes.schemas.InputsSchema.workingday": {"tf": 1}, "bikes.schemas.InputsSchema.weathersit": {"tf": 1}, "bikes.schemas.InputsSchema.temp": {"tf": 1}, "bikes.schemas.InputsSchema.atemp": {"tf": 1}, "bikes.schemas.InputsSchema.hum": {"tf": 1}, "bikes.schemas.InputsSchema.windspeed": {"tf": 1}, "bikes.schemas.InputsSchema.casual": {"tf": 1}, "bikes.schemas.InputsSchema.registered": {"tf": 1}, "bikes.schemas.TargetsSchema.instant": {"tf": 1}, "bikes.schemas.TargetsSchema.cnt": {"tf": 1}, "bikes.schemas.OutputsSchema.instant": {"tf": 1}, "bikes.schemas.OutputsSchema.prediction": {"tf": 1}}, "df": 20}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.jobs.Job": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.services": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}, "bikes.services.MLflowService": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.metrics.Metric.score": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}, "bikes.metrics.SklearnMetric.score": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.registers.Signer": {"tf": 1}, "bikes.registers.Saver.save": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"bikes.services.MLflowService": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.MLflowService": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"bikes.metrics": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.metrics.Metric.scorer": {"tf": 1}}, "df": 3, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bikes.models.Model": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"bikes.models.BaselineSklearnModel": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bikes.schemas.Schema.Config": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.LoggerService": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"bikes.services.MLflowService": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Reader": {"tf": 1}, "bikes.datasets.Writer": {"tf": 1}, "bikes.jobs.Job": {"tf": 1}, "bikes.metrics.Metric": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1}, "bikes.searchers.Searcher": {"tf": 1}, "bikes.services.Service": {"tf": 1}, "bikes.splitters.Splitter": {"tf": 1}}, "df": 9, "d": {"docs": {"bikes.services.MLflowService": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"bikes.registers.Loader.load": {"tf": 1.4142135623730951}, "bikes.registers.CustomLoader.load": {"tf": 1.4142135623730951}, "bikes.services.MLflowService": {"tf": 2}}, "df": 3}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bikes.services.MLflowService": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bikes.services.MLflowService": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.datasets.Writer": {"tf": 1}, "bikes.datasets.Writer.write": {"tf": 1}, "bikes.datasets.ParquetWriter.write": {"tf": 1}}, "df": 3, "r": {"docs": {"bikes.datasets.Writer": {"tf": 1.4142135623730951}, "bikes.datasets.ParquetWriter": {"tf": 1}, "bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1}}, "df": 4, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"bikes.jobs.TuningJob": {"tf": 1.4142135623730951}, "bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.jobs.InferenceJob": {"tf": 1}, "bikes.metrics": {"tf": 1}, "bikes.metrics.SklearnMetric": {"tf": 1}, "bikes.models.Model": {"tf": 1}, "bikes.models.Model.predict": {"tf": 1}, "bikes.models.BaselineSklearnModel.predict": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.Schema.check": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.scripts.Settings": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 15, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"bikes.schemas.InputsSchema.Config": {"tf": 1}, "bikes.schemas.TargetsSchema.Config": {"tf": 1}, "bikes.schemas.OutputsSchema.Config": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"bikes.models.BaselineSklearnModel.model_post_init": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bikes.services.MLflowService": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"bikes.jobs": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"bikes.jobs.TuningJob": {"tf": 1}, "bikes.searchers": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.Signer": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"bikes.registers.CustomAdapter": {"tf": 1}, "bikes.registers.CustomSaver": {"tf": 1}, "bikes.registers.CustomLoader": {"tf": 1}, "bikes.services.LoggerService": {"tf": 1}}, "df": 4, "#": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bikes.registers.Signer": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.7320508075688772}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.7320508075688772}}, "df": 4}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"bikes.jobs.Job": {"tf": 1.4142135623730951}, "bikes.jobs.Job.run": {"tf": 1.4142135623730951}, "bikes.jobs.TuningJob.run": {"tf": 1.4142135623730951}, "bikes.jobs.TrainingJob.run": {"tf": 1.4142135623730951}, "bikes.jobs.InferenceJob.run": {"tf": 1.4142135623730951}, "bikes.scripts.Settings": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"bikes.jobs": {"tf": 1}, "bikes.scripts.Settings": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1.4142135623730951}}, "df": 3}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bikes.scripts.Settings": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bikes.services.LoggerService": {"tf": 1}}, "df": 1, "s": {"docs": {"bikes.jobs.Job.run": {"tf": 1}, "bikes.jobs.TuningJob": {"tf": 1.4142135623730951}, "bikes.jobs.TuningJob.run": {"tf": 1}, "bikes.jobs.TrainingJob": {"tf": 1.4142135623730951}, "bikes.jobs.TrainingJob.run": {"tf": 1}, "bikes.jobs.InferenceJob": {"tf": 1}, "bikes.jobs.InferenceJob.run": {"tf": 1}}, "df": 7}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1, "s": {"docs": {"bikes.metrics.Metric.score": {"tf": 1.4142135623730951}, "bikes.metrics.Metric.scorer": {"tf": 1.4142135623730951}, "bikes.metrics.SklearnMetric.score": {"tf": 1.4142135623730951}, "bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}, "bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 8}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bikes.schemas": {"tf": 1}, "bikes.schemas.Schema": {"tf": 1}, "bikes.schemas.Schema.__init__": {"tf": 2.23606797749979}, "bikes.schemas.Schema.check": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 2.23606797749979}, "bikes.schemas.TargetsSchema.__init__": {"tf": 2.23606797749979}, "bikes.schemas.OutputsSchema.__init__": {"tf": 2.23606797749979}}, "df": 7, "d": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.Schema.check": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 5}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.InputsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1.4142135623730951}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}, "s": {"docs": {"bikes.registers.Signer": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 1}, "bikes.schemas.InputsSchema.__init__": {"tf": 1}, "bikes.schemas.TargetsSchema.__init__": {"tf": 1}, "bikes.schemas.OutputsSchema.__init__": {"tf": 1}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bikes.services.MLflowService.register": {"tf": 1}}, "df": 1, "s": {"docs": {"bikes.services.MLflowService": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"bikes.schemas.Schema.__init__": {"tf": 5.830951894845301}, "bikes.schemas.InputsSchema.__init__": {"tf": 5.830951894845301}, "bikes.schemas.TargetsSchema.__init__": {"tf": 5.830951894845301}, "bikes.schemas.OutputsSchema.__init__": {"tf": 5.830951894845301}}, "df": 4}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bikes.schemas.Schema.check": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"bikes.searchers.GridCVSearcher": {"tf": 1}}, "df": 1}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();